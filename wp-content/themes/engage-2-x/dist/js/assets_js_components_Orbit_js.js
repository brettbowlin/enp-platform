"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkengage_2_x"] = self["webpackChunkengage_2_x"] || []).push([["assets_js_components_Orbit_js"],{

/***/ "./assets/js/components/Orbit.js":
/*!***************************************!*\
  !*** ./assets/js/components/Orbit.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// Original JavaScript code by Chirp Internet: www.chirp.com.au\n// Please acknowledge use of this code by including this header.\n// Modified very, very heavily by Jeremy Jones: https://jeremyjon.es\nvar Orbit = /*#__PURE__*/function () {\n  function Orbit() {\n    _classCallCheck(this, Orbit);\n    this.field = document.getElementById('orbit-field');\n    this.ballsEl = document.getElementById('orbit-balls');\n    this.gravitationalPull = 80;\n    this.gravityText = document.getElementById('orbit-current-gravity');\n    this.increasePullBtn = document.getElementById('orbit-increase-pull');\n    this.decreasePullBtn = document.getElementById('orbit-decrease-pull');\n    this.toggleAnimateBtn = document.getElementById('orbit-toggle-animate');\n    this.balls = null;\n    this.animate = true;\n    this.ballSettings = {\n      num: 80,\n      minSize: 4,\n      maxSize: 12\n    };\n    this.start = 0;\n    this.init(80);\n  }\n  _createClass(Orbit, [{\n    key: \"init\",\n    value: function init(ballsNum) {\n      this.balls = this.createBalls(ballsNum);\n      window.requestAnimationFrame(this.step.bind(this));\n      this.setPullButtons(this.gravitationalPull);\n      this.increasePullBtn.addEventListener('click', this.increaseGravitationalPull.bind(this));\n      this.decreasePullBtn.addEventListener('click', this.decreaseGravitationalPull.bind(this));\n      this.toggleAnimateBtn.addEventListener('click', this.toggleAnimate.bind(this));\n\n      // uncomment to have planet track cursor\n      // document.onmousemove = getCursorXY;\n    }\n  }, {\n    key: \"createBalls\",\n    value: function createBalls() {\n      var size;\n      for (var i = 0; i < this.ballSettings.num; i++) {\n        // get random size between setting sizes\n        size = Math.ceil(this.ballSettings.minSize + Math.random() * (this.ballSettings.maxSize - this.ballSettings.minSize));\n        this.createBall(size);\n      }\n\n      // return all the balls\n      return document.querySelectorAll('.orbit-ball');\n    }\n  }, {\n    key: \"createBall\",\n    value: function createBall(size) {\n      var newBall, stretchDir;\n      newBall = document.createElement(\"div\");\n      stretchDir = Math.round(Math.random() * 1) ? 'x' : 'y';\n      newBall.classList.add('orbit-ball');\n      newBall.style.width = size + 'px';\n      newBall.style.height = size + 'px';\n      newBall.style.background = this.getRandomColor();\n      newBall.setAttribute('data-stretch-dir', stretchDir); // either x or y\n\n      // TODO: Decrease the 'data-stretch-val' attribute to decrease the spread of the balls\n      newBall.setAttribute('data-stretch-val', 1 + Math.random() * 5);\n      newBall.setAttribute('data-grid', this.field.offsetWidth + Math.round(Math.random() * 100)); // min orbit = 30px, max 130\n      newBall.setAttribute('data-duration', 3.5 + Math.round(Math.random() * 8)); // min duration = 3.5s, max 8s\n      newBall.setAttribute('data-start', 0);\n      this.ballsEl.appendChild(newBall);\n    }\n  }, {\n    key: \"callStep\",\n    value: function callStep(timestamp) {\n      return this.step(timestamp);\n    }\n  }, {\n    key: \"step\",\n    value: function step(timestamp) {\n      var progress, x, y, stretch, gridSize, duration, start, xPos, yPos;\n      for (var i = 0; i < this.balls.length; i++) {\n        start = this.balls[i].getAttribute('data-start');\n        if (start == 0) {\n          start = timestamp;\n          this.balls[i].setAttribute('data-start', start);\n        }\n        gridSize = this.balls[i].getAttribute('data-grid');\n        duration = this.balls[i].getAttribute('data-duration');\n        progress = (timestamp - start) / duration / 1000; // percent\n        stretch = this.balls[i].getAttribute('data-stretch-val');\n        if (this.balls[i].getAttribute('data-stretch-dir') === 'x') {\n          x = stretch * Math.sin(progress * 2 * Math.PI) * (1.05 - this.gravitationalPull / 100); // x = ƒ(t)\n          y = Math.cos(progress * 2 * Math.PI); // y = ƒ(t)\n        } else {\n          x = Math.sin(progress * 2 * Math.PI); // x = ƒ(t)\n          y = stretch * Math.cos(progress * 2 * Math.PI) * (1.05 - this.gravitationalPull / 100); // y = ƒ(t)\n        }\n\n        xPos = this.field.clientWidth / 2 + gridSize * x;\n        yPos = this.field.clientHeight / 2 + gridSize * y;\n        this.balls[i].style.transform = 'translate3d(' + xPos + 'px, ' + yPos + 'px, 0)';\n\n        // if these are true, then it's behind the planet\n        if (this.balls[i].getAttribute('data-stretch-dir') === 'x' && (this.field.offsetWidth / 2 - this.balls[i].offsetWidth) * -1 < xPos && xPos < this.field.offsetWidth / 2 + this.balls[i].offsetWidth || this.balls[i].getAttribute('data-stretch-dir') === 'y' && (this.field.offsetWidth / 2 - this.balls[i].offsetWidth) * -1 < yPos && yPos < this.field.offsetWidth / 2 + this.balls[i].offsetWidth) {\n          // backside of the moon\n          this.balls[i].style.zIndex = '-1';\n        } else {\n          // ...front side of the moon\n          this.balls[i].style.zIndex = '9';\n        }\n        if (progress >= 1) {\n          this.balls[i].setAttribute('data-start', 0); // reset to start position\n        }\n      }\n\n      if (this.animate == true) {\n        window.requestAnimationFrame(this.step.bind(this));\n      }\n    }\n  }, {\n    key: \"toggleAnimate\",\n    value: function toggleAnimate() {\n      this.animate = !this.animate;\n      if (this.animate) {\n        this.toggleAnimateBtn.innerHTML = '<i class=\"fas fa-pause\"></i>';\n        // resume the animation\n        window.requestAnimationFrame(this.step.bind(this));\n      } else {\n        this.toggleAnimateBtn.innerHTML = '<i class=\"fas fa-play\"></i>';\n      }\n    }\n\n    // since I don't know physics, this is an approriximation\n  }, {\n    key: \"setGravitationalPull\",\n    value: function setGravitationalPull(percent) {\n      var _this = this;\n      var step, steps, time, direction;\n      this.disablePullButtons();\n      if (percent < 0) {\n        return;\n      }\n      if (100 < percent) {\n        return;\n      }\n      if (percent === this.gravitationalPull) {\n        return;\n      }\n      steps = 20;\n      step = Math.abs(percent - this.gravitationalPull) / steps;\n      direction = percent < this.gravitationalPull ? '-' : '+';\n\n      // get the current pull and step it down over 20 steps so it's smoother than jumping straight there\n      for (var i = 0; i < steps; i++) {\n        // set the time this will fire\n        time = i * (i / Math.PI);\n        // minimum time span\n        if (time < 4) {\n          time = 4;\n        }\n        // set the function\n        setTimeout(function () {\n          if (direction === '-') {\n            _this.gravitationalPull -= step;\n          } else {\n            _this.gravitationalPull += step;\n          }\n        }, time);\n\n        // on our last one, set the gravitationalPull to its final, nicely rounded number\n        if (i === steps - 1) {\n          setTimeout(function () {\n            _this.gravitationalPull = Math.round(_this.gravitationalPull);\n            _this.setPullButtons();\n          }, time + 20);\n        }\n      }\n    }\n  }, {\n    key: \"setPullButtons\",\n    value: function setPullButtons() {\n      if (this.gravitationalPull <= 0) {\n        this.decreasePullBtn.disabled = true;\n        this.increasePullBtn.disabled = false;\n      } else if (100 <= this.gravitationalPull) {\n        this.decreasePullBtn.disabled = false;\n        this.increasePullBtn.disabled = true;\n      } else {\n        this.decreasePullBtn.disabled = false;\n        this.increasePullBtn.disabled = false;\n      }\n      this.gravityText.innerHTML = this.gravitationalPull;\n    }\n  }, {\n    key: \"disablePullButtons\",\n    value: function disablePullButtons() {\n      this.decreasePullBtn.disabled = true;\n      this.increasePullBtn.disabled = true;\n    }\n  }, {\n    key: \"increaseGravitationalPull\",\n    value: function increaseGravitationalPull() {\n      this.setGravitationalPull(this.gravitationalPull + 10);\n    }\n  }, {\n    key: \"decreaseGravitationalPull\",\n    value: function decreaseGravitationalPull() {\n      this.setGravitationalPull(this.gravitationalPull - 10);\n    }\n\n    // if you want the planet to track the cursor\n  }, {\n    key: \"getCursorXY\",\n    value: function getCursorXY(e) {\n      var cursorPos = {\n        x: window.Event ? e.pageX : event.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft),\n        y: window.Event ? e.pageY : event.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop)\n      };\n      this.field.style.left = cursorPos.x - this.field.offsetWidth / 2 + \"px\";\n      this.field.style.top = cursorPos.y - this.field.offsetHeight / 2 + \"px\";\n    }\n  }, {\n    key: \"getRandomColor\",\n    value: function getRandomColor() {\n      var colors = ['#00a9b7', '#005f86', '#d6d2c4', '#f8971f', '#BF5700', '#d9534f'];\n      return colors[Math.floor(Math.random() * colors.length)];\n    }\n  }]);\n  return Orbit;\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Orbit);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/components/Orbit.js\n");

/***/ })

}]);