class Collapse{constructor(s,i){this.button=s,this.els=i,this.onClick=this.click.bind(this),this.init()}init(){this.button.addEventListener("click",this.onClick);for(let s of this.els)s.classList.add("is-hidden"),this.ariaHidden(s);this.button.classList.add("is-closed")}destroy(){for(let s of this.els)s.classList.remove("is-hidden"),s.classList.remove("is-open"),s.removeAttribute("aria-hidden");this.button.classList.remove("is-closed"),this.button.classList.remove("is-open"),this.button.removeEventListener("click",this.onClick)}click(s){window.innerWidth<800&&s.preventDefault(),"A"===this.button.tagName&&this.button.classList.contains("is-open")&&(window.location=this.button.getAttribute("href")),this.toggleButton();for(let s of this.els)this.toggle(s)}toggleButton(){this.button.classList.contains("is-open")?(this.button.classList.remove("is-opening","is-open"),this.button.classList.add("is-closing","is-closed"),setTimeout(()=>{this.button.classList.remove("is-closing")},600)):(this.button.classList.remove("is-closing","is-closed"),this.button.classList.add("is-opening","is-open"),setTimeout(()=>{this.button.classList.remove("is-opening")},600))}toggle(s){s.classList.contains("is-open")?this.hide(s):this.show(s)}show(s){s.classList.add("is-open"),s.classList.remove("is-hidden","is-hiding"),this.ariaShow(s),s.classList.add("is-opening"),setTimeout(()=>{s.classList.remove("is-opening")},600)}hide(s){s.classList.remove("is-open","is-opening"),s.classList.add("is-hidden","is-hiding"),this.ariaHidden(s),setTimeout(()=>{s.classList.remove("is-hiding")},600)}ariaShow(s){s.setAttribute("aria-hidden",!1)}ariaHidden(s){s.setAttribute("aria-hidden",!0)}}export default Collapse;