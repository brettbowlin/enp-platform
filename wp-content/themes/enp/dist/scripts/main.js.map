{"version":3,"sources":["../bower_components/Chart.js/dist/Chart.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js","../assets/scripts/main.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Chart","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,2,"getRgba","string","abbr","hex","rgba","per","keyword","rgb","match","parseInt","slice","parseFloat","Math","round","colorNames","scale","getHsla","hsl","alpha","h","isNaN","getHwb","hwb","w","b","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","rgbString","rgbaString","undefined","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","min","max","str","toString","toUpperCase","name","6",3,"convert","Color","obj","values","hsv","cmyk","setValues","red","lightness","v","value","whiteness","c","cyan","JSON","stringify","prototype","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w1","w2","toJSON","clone","type","result","source","target","prop","hasOwnProperty","console","error","spaces","maxes","getValues","space","charAt","chans","capped","sname","args","Array","index","svalues","5",4,"rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","m","y","k","rgb2keyword","reverseKeywords","rgb2xyz","x","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","floor","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","forEach",7,"10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","8","9","Bar","context","config","Bubble","Doughnut","Line","PolarArea","Radar","options","helpers","configMerge","aspectRatio","defaultConfig","hover","mode","scales","xAxes","position","id","yAxes","tooltips","callbacks","title","tooltipItems","data","label","tooltipItem","xLabel","yLabel","defaults","scatter","controllers","line","Scatter","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","extend","dataElementType","elements","Rectangle","initialize","chart","datasetIndex","getMeta","getBarCount","me","barCount","each","datasets","dataset","meta","getDatasetMeta","isDatasetVisible","update","reset","rectangle","updateElement","xScale","getScaleForId","xAxisID","yScale","yAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","getDataset","_xScale","_yScale","_datasetIndex","_index","_model","calculateBarX","calculateBarY","labels","datasetLabel","base","calculateBarBase","width","calculateBarWidth","backgroundColor","getValueAtIndexOrDefault","borderSkipped","borderColor","borderWidth","pivot","stacked","negDS","negDSMeta","j","posDS","posDSMeta","getPixelForValue","getRuler","tickWidth","datasetCount","getPixelForTick","ticks","categoryWidth","categorySpacing","fullBarWidth","perc","barWidth","barSpacing","ruler","getBarIndex","barIndex","leftTick","isCombo","sumPos","sumNeg","ds","dsMeta","draw","ease","easingDecimal","d","transition","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","numBars","height","calculateBarHeight","cornerAt","corners","startCorner","ctx","_chart","vm","_view","halfHeight","topY","bottomY","right","halfStroke","beginPath","fillStyle","strokeStyle","lineWidth","borders","indexOf","moveTo","apply","lineTo","fill","stroke","inRange","mouseX","mouseY","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","bubble","dataPoint","Point","points","point","pointElementOptions","dsIndex","getPixelForDecimal","radius","getRadius","hitRadius","skip","hoverRadius","dataVal","doughnut","animation","animateRotate","animateScale","legendCallback","text","push","join","legend","generateLabels","map","arc","arcOpts","bw","hidden","onClick","legendItem","ilen","cutoutPercentage","rotation","circumference","pie","Arc","linkScales","noop","getRingIndex","ringIndex","chartArea","opts","availableWidth","left","availableHeight","bottom","top","minSize","offset","startAngle","endAngle","start","end","contains0","contains90","contains180","contains270","cutout","size","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","abs","lineEnabled","getValueOrDefault","showLine","showLines","datasetElementType","addElementAndReset","tension","updateBezierControlPoints","lineElementOptions","lineTension","_scale","_children","spanGaps","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","scaleTop","scaleBottom","scaleZero","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","pointStyle","controlPoints","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","lineArc","count","countVisibleElements","visibleCount","negHalfPI","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","xCenter","yCenter","duration","easing","onProgress","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","animationWrapper","splice","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","endTime","types","instances","Controller","instance","uid","Object","defineProperty","get","responsive","resize","plugins","notify","bindEvents","ensureScalesHaveIDs","buildOrUpdateControllers","buildScales","updateLayout","resetElements","initToolTip","clear","stop","silent","canvas","newWidth","getMaximumWidth","newHeight","maintainAspectRatio","isFinite","getMaximumHeight","sizeChanged","retinaScale","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","dtype","isDefault","item","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","layoutService","newControllers","controller","updateIndex","animationDuration","tooltip","_data","buildOrUpdateElements","updateDatasets","animationOptions","easingFunction","easingEffects","stepDecimal","easeDecimal","boxes","box","getElementAtEvent","eventPosition","getRelativePosition","elementsArray","getElementsAtEvent","found","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","events","removeResizeListener","parentNode","originalDevicePixelRatio","style","originalCanvasStyleWidth","originalCanvasStyleHeight","toBase64Image","toDataURL","Tooltip","_chartInstance","_options","evt","eventHandler","updateHoverStyle","enabled","method","hoverOptions","tooltipsOptions","lastActive","lastTooltipActive","active","tooltipActive","onHover","handleEvent","_active","arrayEquals","addElements","scaleID","createMetaDataset","createMetaData","metaData","md","numData","numMetaData","elementOpts","valueOrDefault","color","inherits","configuration","_start","err","startVal","tooltipPosition","hasValue","isNumber","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","Number","POSITIVE_INFINITY","loopable","callback","reverse","len","isArray","keys","objClone","setFn","_base","extension","scaleMerge","getScaleDefaults","baseArray","valueObj","axisType","axisDefaults","defaultValue","array","where","collection","filterCallback","filter","filtered","scope","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","parent","ChartElement","constructor","Surrogate","__super__","almostEquals","epsilon","reduce","NEGATIVE_INFINITY","sign","log10","log","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","loop","niceNum","range","niceFraction","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","eventType","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","arrayOfEvents","eventName","getConstraintWidth","getConstraintHeight","container","padding","clientWidth","cw","clientHeight","ch","el","property","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","drawRoundedRectangle","quadraticCurveTo","closePath","CanvasGradient","defaultColor","addResizeListener","hiddenIframe","createElement","hiddenIframeClass","classlist","add","setAttribute","display","border","margin","insertBefore","firstChild","contentWindow","onresize","querySelector","removeChild","a0","a1","v0","v1","callCallback","fn","_tArg","CanvasPattern","getContext","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","addBox","removeBox","getMinimumBoxSize","isHorizontal","fullWidth","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","chartAreaHeight","minBoxSizes","horizontal","fitBox","minBoxSize","scaleMargin","totalLeftBoxesWidth","totalRightBoxesWidth","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","xPadding","yPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","sort","chartAreaWidth","newMaxChartAreaHeight","newMaxChartAreaWidth","ci","boxWidth","lineCap","lineDash","lineDashOffset","lineJoin","Legend","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","labelOpts","globalDefault","itemOrDefault","fontSize","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","fontColor","drawLegendBox","save","setLineDash","strokeRect","fillRect","restore","fillText","lh","hitBox","register","beforeInit","legendOpts","_plugins","plugin","unregister","idx","getAll","PluginBase","afterInit","beforeDraw","afterDraw","pluginService","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Scale","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","numericalTick","userCallback","globalDefaults","optionTicks","tickFontSize","tickFontStyle","tickFontFamily","tickLabelFont","firstRotated","firstWidth","lastWidth","labelRotation","longestTextCache","cosRotation","sinRotation","originalLabelWidth","labelWidth","yLabelWidth","tickOpts","scaleLabelOpts","scaleLabelFontSize","scaleLabelFontStyle","scaleLabelFontFamily","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","maxLabelWidth","getRightValue","rawValue","NaN","getLabelForIndex","getValueForPixel","includeOffset","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","skipRatio","maxTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","shouldSkip","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","xLineValue","yLineValue","glWidth","glColor","itemToDraw","translate","scaleLabelX","scaleLabelY","isLeft","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","Title","chartOpts","pos","titleX","titleY","titleFont","titleOpts","titleBlock","pushOrConcat","toPush","getAveragePosition","xPositions","yPositions","createTooltipItem","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yAlign","xAlign","caretSize","cornerRadius","multiKeyBackground","beforeTitle","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","afterLabel","afterBody","beforeFooter","footer","afterFooter","tooltipOpts","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","labelColors","itemSort","body","caretPadding","tooltipSize","getTooltipSize","determineAlignment","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","lf","rf","olf","orf","yf","midX","midY","pt","paddingAndSize","radiusAndPadding","drawCaret","tooltipPoint","x3","y3","ptX","ptY","bgColor","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","moment","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","centreAngle","rangeFromCentre","sA","eA","lineToNextPoint","previousPoint","nextPoint","skipHandler","previousSkipHandler","bezierCurveTo","loopBackToStart","drawLineToCenter","first","last","globalOptionLineElements","edgeLength","xOffset","yOffset","drawImage","SQRT2","halfWidth","leftX","rightX","DatasetScale","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","innerDimension","valueDimension","tickValue","logDelta","tickString","numDecimal","toFixed","LinearScale","LinearScaleBase","IDMatches","valuesPerType","hasPositiveValues","hasNegativeValues","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","handleDirectionalChanges","rightValue","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","spacing","fixedStepSizeSet","fixedStepSize","stepSize","niceRange","niceMin","niceMax","numSpaces","arr","remain","toExponential","LogarithmicScale","tickVal","exp","significand","lastTick","tickValues","newVal","animate","angleLines","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","LinearRadialScale","getValueCount","drawingArea","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","pointLabelFontSize","pointLabeFontStyle","pointLabeFontFamily","pointLabeFont","largestPossibleRadius","furthestRight","furthestLeft","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","angleMultiplier","scalingFactor","distanceFromCenter","thisAngle","gridLineOpts","angleLineOpts","pointLabelOpts","yCenterOffset","yHeight","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","time","units","steps","maxStep","parser","format","unit","displayFormat","isoWeekday","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","TimeScale","getLabelMoment","labelMoments","getMomentStartOf","tick","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","firstTick","momentsForDataset","datasetVisible","unitScale","scaleSizeInUnits","diff","unitStepSize","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","roundedStart","roundedEnd","smallestLabelSeparation","newTick","tooltipFormat","formattedTick","tickMoments","asSeconds","getMonth","warn","$","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","emulateTransitionEnd","called","$el","one","trigger","support","event","special","bsTransitionEnd","bindType","delegateType","handle","is","handleObj","jQuery","Plugin","option","$this","Alert","dismiss","on","close","VERSION","TRANSITION_DURATION","removeElement","$parent","detach","remove","selector","attr","replace","preventDefault","closest","Event","isDefaultPrevented","removeClass","hasClass","old","alert","Constructor","noConflict","Button","toggle","setState","$element","DEFAULTS","isLoading","loadingText","state","resetText","proxy","addClass","removeAttr","$input","find","toggleClass","button","$btn","test","Carousel","action","slide","interval","pause","cycle","$indicators","paused","sliding","$active","$items","keyboard","keydown","documentElement","wrap","tagName","which","prev","clearInterval","setInterval","getItemIndex","children","getItemForDirection","direction","activeIndex","willWrap","itemIndex","eq","that","$next","isCycling","relatedTarget","slideEvent","$nextIndicator","slidEvent","offsetWidth","carousel","clickHandler","href","$target","slideIndex","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","show","activesData","actives","startEvent","complete","scrollSize","camelCase","hide","offsetHeight","isOpen","collapse","clearMenus","backdrop","contains","Dropdown","isActive","insertAfter","stopPropagation","desc","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","load","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","appendTo","scrollTop","adjustDialog","enforceFocus","off","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","focus","callbackRemove","modalIsOverflowing","scrollHeight","css","bodyIsOverflowing","fullWindowWidth","documentElementRect","measureScrollbar","bodyPad","scrollDiv","className","append","modal","showEvent","timeout","hoverState","inState","init","placement","template","delay","html","viewport","getOptions","$viewport","isFunction","click","triggers","split","eventIn","eventOut","enter","leave","fixTitle","getDefaults","getDelegateOptions","tip","isInStateTrue","hasContent","inDom","ownerDocument","$tip","tipId","getUID","setContent","autoToken","autoPlace","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","setOffset","using","props","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","$e","isBody","elRect","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","prefix","random","getElementById","$arrow","enable","disable","toggleEnabled","removeData","Popover","content","getContent","popover","ScrollSpy","$scrollElement","offsets","targets","activeTarget","process","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","$href","maxScroll","activate","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Sage","common","finalize","home","about_us","UTIL","fire","funcname","namespace","loadEvents","classnm","ready"],"mappings":"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","file":"main.js","sourcesContent":["/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.1.5\n *\n * Copyright 2016 Nick Downie\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/* MIT license */\r\nvar colorNames = require(6);\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n},{\"6\":6}],3:[function(require,module,exports){\n/* MIT license */\r\nvar convert = require(5);\r\nvar string = require(2);\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\n},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],5:[function(require,module,exports){\nvar conversions = require(4);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"4\":4}],6:[function(require,module,exports){\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n},{}],7:[function(require,module,exports){\n/**\r\n * @namespace Chart\r\n */\r\nvar Chart = require(26)();\r\n\r\nrequire(25)(Chart);\r\nrequire(24)(Chart);\r\nrequire(21)(Chart);\r\nrequire(22)(Chart);\r\nrequire(23)(Chart);\r\nrequire(27)(Chart);\r\nrequire(31)(Chart);\r\nrequire(29)(Chart);\r\nrequire(30)(Chart);\r\nrequire(32)(Chart);\r\nrequire(28)(Chart);\r\nrequire(33)(Chart);\r\n\r\nrequire(34)(Chart);\r\nrequire(35)(Chart);\r\nrequire(36)(Chart);\r\nrequire(37)(Chart);\r\n\r\nrequire(40)(Chart);\r\nrequire(38)(Chart);\r\nrequire(39)(Chart);\r\nrequire(41)(Chart);\r\nrequire(42)(Chart);\r\nrequire(43)(Chart);\r\n\r\n// Controllers must be loaded after elements\r\n// See Chart.core.datasetController.dataElementType\r\nrequire(15)(Chart);\r\nrequire(16)(Chart);\r\nrequire(17)(Chart);\r\nrequire(18)(Chart);\r\nrequire(19)(Chart);\r\nrequire(20)(Chart);\r\n\r\nrequire(8)(Chart);\r\nrequire(9)(Chart);\r\nrequire(10)(Chart);\r\nrequire(11)(Chart);\r\nrequire(12)(Chart);\r\nrequire(13)(Chart);\r\nrequire(14)(Chart);\r\n\r\nwindow.Chart = module.exports = Chart;\r\n\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"39\":39,\"40\":40,\"41\":41,\"42\":42,\"43\":43,\"8\":8,\"9\":9}],8:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bar = function(context, config) {\r\n\t\tconfig.type = 'bar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],9:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bubble = function(context, config) {\r\n\t\tconfig.type = 'bubble';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],10:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Doughnut = function(context, config) {\r\n\t\tconfig.type = 'doughnut';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],11:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Line = function(context, config) {\r\n\t\tconfig.type = 'line';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],12:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.PolarArea = function(context, config) {\r\n\t\tconfig.type = 'polarArea';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],13:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\t\r\n\tChart.Radar = function(context, config) {\r\n\t\tconfig.options = Chart.helpers.configMerge({ aspectRatio: 1 }, config.options);\r\n\t\tconfig.type = 'radar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar defaultConfig = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // scatter should not use a category axis\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-1\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Register the default config for this type\r\n\tChart.defaults.scatter = defaultConfig;\r\n\r\n\t// Scatter charts use line controllers\r\n\tChart.controllers.scatter = Chart.controllers.line;\r\n\r\n\tChart.Scatter = function(context, config) {\r\n\t\tconfig.type = 'scatter';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],15:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\"\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Rectangle,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\r\n\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\tthis.getMeta().bar = true;\r\n\t\t},\r\n\r\n\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\r\n\t\tgetBarCount: function getBarCount() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar barCount = 0;\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (meta.bar && me.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t++barCount;\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\t\t\treturn barCount;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tme.updateElement(rectangle, index, reset);\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tupdateElement: function updateElement(rectangle, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = yScale.getBasePixel();\r\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: me.calculateBarX(index, me.index),\r\n\t\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\t\twidth: me.calculateBarWidth(index),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\tvar value = datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar datasetCount = me.getBarCount();\r\n\r\n\t\t\tvar tickWidth;\r\n\r\n\t\t\tif (xScale.options.type === 'category') {\r\n\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\r\n\t\t\t} else {\r\n\t\t\t\t// Average width\r\n\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\t}\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\r\n\r\n\t\t\tif (xScale.ticks.length !== me.chart.data.labels.length) {\r\n\t\t\t    var perc = xScale.ticks.length / me.chart.data.labels.length;\r\n\t\t\t    fullBarWidth = fullBarWidth * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarWidth: function(index) {\r\n\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\r\n\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\r\n\t\t},\r\n\r\n\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\r\n\t\tgetBarIndex: function(datasetIndex) {\r\n\t\t\tvar barIndex = 0;\r\n\t\t\tvar meta, j;\r\n\r\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tmeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++barIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn barIndex;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn leftTick +\r\n\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barWidth * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar value = me.getDataset().data[index];\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tvar d = me.getDataset().data[index];\r\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\trectangle.transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t// it extends bar (like pie extends doughnut)\r\n\tChart.defaults.horizontalBar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"bottom\"\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t\telements: {\r\n\t\t\trectangle: {\r\n\t\t\t\tborderSkipped: 'left'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = xScale.getBasePixel();\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\r\n\t\t\t\t\ty: me.calculateBarY(index, me.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\t\theight: me.calculateBarHeight(index),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdraw: function () {\r\n\t\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\t\tvar vm = this._view;\r\n\r\n\t\t\t\t\tvar halfHeight = vm.height / 2,\r\n\t\t\t\t\t\ttopY = vm.y - halfHeight,\r\n\t\t\t\t\t\tbottomY = vm.y + halfHeight,\r\n\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\r\n\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\ttopY += halfStroke;\r\n\t\t\t\t\t\tbottomY -= halfStroke;\r\n\t\t\t\t\t\tright += halfStroke;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t\t// | 1 2 |\r\n\t\t\t\t\t// | 0 3 |\r\n\t\t\t\t\tvar corners = [\r\n\t\t\t\t\t\t[vm.base, bottomY],\r\n\t\t\t\t\t\t[vm.base, topY],\r\n\t\t\t\t\t\t[right, topY],\r\n\t\t\t\t\t\t[right, bottomY]\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\t\t\tvar vm = this._view;\r\n\t\t\t\t\tvar inRange = false;\r\n\r\n\t\t\t\t\tif (vm) {\r\n\t\t\t\t\t\tif (vm.x < vm.base) {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn inRange;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function (datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = me.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = me.chart.data.datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = me.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function (index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar datasetCount = me.getBarCount();\r\n\r\n\t\t\tvar tickHeight;\r\n\t\t\tif (yScale.options.type === 'category') {\r\n\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\r\n\t\t\t} else {\r\n\t\t\t\t// Average width\r\n\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\r\n\t\t\t}\r\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\r\n\r\n\t\t\tif (yScale.ticks.length !== me.chart.data.labels.length) {\r\n\t\t\t\tvar perc = yScale.ticks.length / me.chart.data.labels.length;\r\n\t\t\t\tfullBarHeight = fullBarHeight * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\tbarSpacing: barSpacing,\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarHeight: function (index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar yScale = me.getScaleForId(me.getMeta().yAxisID);\r\n\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function (index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar value = me.getDataset().data[index];\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function (index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn topTick +\r\n\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barHeight * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bubble = {\r\n\t\thover: {\r\n\t\t\tmode: \"single\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // bubble should probably use a linear scale by default\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-0\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-0\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar data = dataset.data[index];\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar dsIndex = me.index;\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: dsIndex,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(data, index, dsIndex, me.chart.isCombo),\r\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Trick to reset the styles of the point\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\r\n\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\r\n\t\t\tpoint.pivot();\r\n\t\t},\r\n\r\n\t\tgetRadius: function(value) {\r\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\r\n\r\n\t\t\t// Radius\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\r\n\r\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tdefaults = Chart.defaults;\r\n\r\n\tdefaults.doughnut = {\r\n\t\tanimation: {\r\n\t\t\t//Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\tanimateRotate: true,\r\n\t\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\tanimateScale: false\r\n\t\t},\r\n\t\taspectRatio: 1,\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//The percentage of the chart that we cut out of the middle.\r\n\t\tcutoutPercentage: 50,\r\n\r\n\t\t//The rotation of the chart, where the first data arc begins.\r\n\t\trotation: Math.PI * -0.5,\r\n\r\n\t\t//The total circumference of the chart.\r\n\t\tcircumference: Math.PI * 2.0,\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\thelpers.extend(defaults.pie, {\r\n\t\tcutoutPercentage: 0\r\n\t});\r\n\r\n\r\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\tgetRingIndex: function getRingIndex(datasetIndex) {\r\n\t\t\tvar ringIndex = 0;\r\n\r\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++ringIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ringIndex;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\toffset = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0\r\n\t\t\t\t},\r\n\t\t\t\tmeta = me.getMeta(),\r\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\tcircumference = opts.circumference;\r\n\r\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t}\r\n\r\n\t\t\tchart.outerRadius = Math.max(minSize / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\r\n\t\t\tmeta.total = me.calculateTotal();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tdataset = me.getDataset(),\r\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\r\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\r\n\t\t\t\tcustom = arc.custom || {},\r\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar model = arc._model;\r\n\t\t\t// Resets the visual styles\r\n\t\t\tthis.removeHoverStyle(arc);\r\n\r\n\t\t\t// Set correct angles if not resetting\r\n\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t}\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcalculateTotal: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar total = 0;\r\n\t\t\tvar value;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn total;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar total = this.getMeta().total;\r\n\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.line = {\r\n\t\tshowLines: true,\r\n\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tid: 'x-axis-0'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tfunction lineEnabled(dataset, options) {\r\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\r\n\t}\r\n\r\n\tChart.controllers.line = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar meta = me.getMeta();\r\n\r\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(me, index);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tif (lineEnabled(me.getDataset(), options) && meta.dataset._model.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar i, ilen, custom;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar showLine = lineEnabled(dataset, options);\r\n\r\n\t\t\t// Update Line\r\n\t\t\tif (showLine) {\r\n\t\t\t\tcustom = line.custom || {};\r\n\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Utility\r\n\t\t\t\tline._scale = scale;\r\n\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t// Data\r\n\t\t\t\tline._children = points;\r\n\t\t\t\t// Model\r\n\t\t\t\tline._model = {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\r\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n\t\t\t\t\t// This option gives linse the ability to span gaps\r\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : false,\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePixel()\r\n\t\t\t\t};\r\n\r\n\t\t\t\tline.pivot();\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t}\r\n\r\n\t\t\tif (showLine && line._model.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\r\n\t\t\t// Now pivot the point for animation\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].pivot();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn backgroundColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderColor) {\r\n\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderWidth) {\r\n\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t} else if (dataset.pointBorderWidth) {\r\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t} else if (dataset.borderWidth) {\r\n\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderWidth;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar datasetIndex = me.index;\r\n\t\t\tvar value = dataset.data[index];\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\tvar x, y;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\tx = xScale.getPixelForValue(value, index, datasetIndex, me.chart.isCombo);\r\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex, me.chart.isCombo);\r\n\r\n\t\t\t// Utility\r\n\t\t\tpoint._xScale = xScale;\r\n\t\t\tpoint._yScale = yScale;\r\n\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\tpoint._index = index;\r\n\r\n\t\t\t// Desired view properties\r\n\t\t\tpoint._model = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t// Appearance\r\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\t// Tooltip\r\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculatePointY: function(value, index, datasetIndex, isCombo) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar sumPos = 0;\r\n\t\t\tvar sumNeg = 0;\r\n\t\t\tvar i, ds, dsMeta;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.type === 'line' && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar area = this.chart.chartArea;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar i, ilen, point, model, controlPoints;\r\n\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoint = points[i];\r\n\t\t\t\tmodel = point._model;\r\n\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\r\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\r\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\r\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].transition(easingDecimal);\r\n\t\t\t}\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\t\t}\r\n\r\n\t\t\t// Draw the points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].draw();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],19:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.polarArea = {\r\n\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\",\r\n\t\t\tlineArc: true // so that lines are circular\r\n\t\t},\r\n\r\n\t\t//Boolean - Whether to animate the rotation of the chart\r\n\t\tanimation: {\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: true\r\n\t\t},\r\n\r\n\t\taspectRatio: 1,\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\">');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</span></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\r\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n\t\t\tmeta.count = me.countVisibleElements();\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar animationOpts = opts.animation;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar custom = arc.custom || {};\r\n\t\t\tvar scale = chart.scale;\r\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\tvar labels = chart.data.labels;\r\n\r\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\r\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\tvar visibleCount = 0;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t++visibleCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar negHalfPI = -0.5 * Math.PI;\r\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\tvar startAngle = (negHalfPI) + (circumference * visibleCount);\r\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\r\n\r\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\r\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? negHalfPI : startAngle,\r\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? negHalfPI : endAngle,\r\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Apply border and fill style\r\n\t\t\tme.removeHoverStyle(arc);\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcountVisibleElements: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar count = this.getMeta().count;\r\n\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.radar = {\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\"\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tline: {\r\n\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(this, index);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\t\t\tvar custom = line.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\r\n\t\t\tvar scale = me.chart.scale;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t// Data\r\n\t\t\t\t_children: points,\r\n\t\t\t\t_loop: true,\r\n\t\t\t\t// Model\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePosition()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmeta.dataset.pivot();\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t}, me);\r\n\r\n\r\n\t\t\t// Update bezier control points\r\n\t\t\tme.updateBezierControlPoints();\r\n\t\t},\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar scale = me.chart.scale;\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, me.chart.options.elements.line.tension),\r\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\tvar meta = this.getMeta();\r\n\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t});\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\r\n\t\t\t// Draw the points\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],21:[function(require,module,exports){\n/*global window: false */\r\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.animation = {\r\n\t\tduration: 1000,\r\n\t\teasing: \"easeOutQuart\",\r\n\t\tonProgress: helpers.noop,\r\n\t\tonComplete: helpers.noop\r\n\t};\r\n\r\n\tChart.Animation = Chart.Element.extend({\r\n\t\tcurrentStep: null, // the current animation step\r\n\t\tnumSteps: 60, // default number of steps\r\n\t\teasing: \"\", // the easing to use for this animation\r\n\t\trender: null, // render function used by the animation service\r\n\r\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t});\r\n\r\n\tChart.animationService = {\r\n\t\tframeDuration: 17,\r\n\t\tanimations: [],\r\n\t\tdropFrames: 0,\r\n\t\trequest: null,\r\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (!lazy) {\r\n\t\t\t\tchartInstance.animating = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\r\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.animations.push({\r\n\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\tanimationObject: animationObject\r\n\t\t\t});\r\n\r\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\tif (me.animations.length === 1) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Cancel the animation for a given chart instance\r\n\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t});\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\tchartInstance.animating = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestAnimationFrame: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.request === null) {\r\n\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tme.request = null;\r\n\t\t\t\t\tme.startDigest();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartDigest: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tvar startTime = Date.now();\r\n\t\t\tvar framesToDrop = 0;\r\n\r\n\t\t\tif (me.dropFrames > 1) {\r\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\r\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\r\n\t\t\t}\r\n\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < me.animations.length) {\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\r\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\r\n\r\n\t\t\t\t\tme.animations.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar endTime = Date.now();\r\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\r\n\r\n\t\t\tme.dropFrames += dropFrames;\r\n\r\n\t\t\t// Do we have more stuff to animate?\r\n\t\t\tif (me.animations.length > 0) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\n},{}],22:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t//Create a dictionary of chart types, to allow for extension of existing types\r\n\tChart.types = {};\r\n\r\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\r\n\tChart.instances = {};\r\n\r\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\tChart.controllers = {};\r\n\r\n\t/**\r\n\t * @class Chart.Controller\r\n\t * The main controller of a chart.\r\n\t */\r\n\tChart.Controller = function(instance) {\r\n\r\n\t\tthis.chart = instance;\r\n\t\tthis.config = instance.config;\r\n\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\r\n\t\tthis.id = helpers.uid();\r\n\r\n\t\tObject.defineProperty(this, 'data', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.config.data;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Add the chart instance to the global namespace\r\n\t\tChart.instances[this.id] = this;\r\n\r\n\t\tif (this.options.responsive) {\r\n\t\t\t// Silent resize before chart draws\r\n\t\t\tthis.resize(true);\r\n\t\t}\r\n\r\n\t\tthis.initialize();\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller */ {\r\n\r\n\t\tinitialize: function initialize() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Before init plugin notification\r\n\t\t\tChart.plugins.notify('beforeInit', [me]);\r\n\r\n\t\t\tme.bindEvents();\r\n\r\n\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\r\n\t\t\t// are built\r\n\t\t\tme.ensureScalesHaveIDs();\r\n\t\t\tme.buildOrUpdateControllers();\r\n\t\t\tme.buildScales();\r\n\t\t\tme.updateLayout();\r\n\t\t\tme.resetElements();\r\n\t\t\tme.initToolTip();\r\n\t\t\tme.update();\r\n\r\n\t\t\t// After init plugin notification\r\n\t\t\tChart.plugins.notify('afterInit', [me]);\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tclear: function clear() {\r\n\t\t\thelpers.clear(this.chart);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tstop: function stop() {\r\n\t\t\t// Stops any current animation loop occuring\r\n\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tresize: function resize(silent) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tvar newWidth = helpers.getMaximumWidth(canvas);\r\n\t\t\tvar aspectRatio = chart.aspectRatio;\r\n\t\t\tvar newHeight = (me.options.maintainAspectRatio && isNaN(aspectRatio) === false && isFinite(aspectRatio) && aspectRatio !== 0) ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas);\r\n\r\n\t\t\tvar sizeChanged = chart.width !== newWidth || chart.height !== newHeight;\r\n\r\n\t\t\tif (!sizeChanged) {\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\r\n\t\t\tcanvas.width = chart.width = newWidth;\r\n\t\t\tcanvas.height = chart.height = newHeight;\r\n\r\n\t\t\thelpers.retinaScale(chart);\r\n\r\n\t\t\t// Notify any plugins about the resize\r\n\t\t\tvar newSize = { width: newWidth, height: newHeight };\r\n\t\t\tChart.plugins.notify('resize', [me, newSize]);\r\n\r\n\t\t\t// Notify of resize\r\n\t\t\tif (me.options.onResize) {\r\n\t\t\t\tme.options.onResize(me, newSize);\r\n\t\t\t}\r\n\r\n\t\t\tif (!silent) {\r\n\t\t\t\tme.stop();\r\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tensureScalesHaveIDs: function ensureScalesHaveIDs() {\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\tvar scaleOptions = options.scale;\r\n\r\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleOptions) {\r\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t */\r\n\t\tbuildScales: function buildScales() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar scales = me.scales = {};\r\n\t\t\tvar items = [];\r\n\r\n\t\t\tif (options.scales) {\r\n\t\t\t\titems = items.concat(\r\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\treturn { options: xAxisOptions, dtype: 'category' }; }),\r\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\treturn { options: yAxisOptions, dtype: 'linear' }; }));\r\n\t\t\t}\r\n\r\n\t\t\tif (options.scale) {\r\n\t\t\t\titems.push({ options: options.scale, dtype: 'radialLinear', isDefault: true });\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(items, function(item, index) {\r\n\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\tctx: me.chart.ctx,\r\n\t\t\t\t\tchart: me\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscales[scale.id] = scale;\r\n\r\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t},\r\n\r\n\t\tupdateLayout: function() {\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateControllers: function buildOrUpdateControllers() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar types = [];\r\n\t\t\tvar newControllers = [];\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttypes.push(meta.type);\r\n\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\r\n\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (types.length > 1) {\r\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\tme.isCombo = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newControllers;\r\n\t\t},\r\n\r\n\t\tresetElements: function resetElements() {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tupdate: function update(animationDuration, lazy) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.plugins.notify('beforeUpdate', [me]);\r\n\r\n\t\t\t// In case the entire data object changed\r\n\t\t\tme.tooltip._data = me.data;\r\n\r\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\r\n\r\n\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t}, me);\r\n\r\n\t\t\tChart.layoutService.update(me, me.chart.width, me.chart.height);\r\n\r\n\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\r\n\t\t\tChart.plugins.notify('afterScaleUpdate', [me]);\r\n\r\n\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\tcontroller.reset();\r\n\t\t\t});\r\n\r\n\t\t\tme.updateDatasets();\r\n\r\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\tChart.plugins.notify('afterUpdate', [me]);\r\n\r\n\t\t\tme.render(animationDuration, lazy);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @method beforeDatasetsUpdate\r\n\t\t * @description Called before all datasets are updated. If a plugin returns false,\r\n\t\t * the datasets update will be cancelled until another chart update is triggered.\r\n\t\t * @param {Object} instance the chart instance being updated.\r\n\t\t * @returns {Boolean} false to cancel the datasets update.\r\n\t\t * @memberof Chart.PluginBase\r\n\t\t * @since version 2.1.5\r\n\t\t * @instance\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * @method afterDatasetsUpdate\r\n\t\t * @description Called after all datasets have been updated. Note that this\r\n\t\t * extension will not be called if the datasets update has been cancelled.\r\n\t\t * @param {Object} instance the chart instance being updated.\r\n\t\t * @memberof Chart.PluginBase\r\n\t\t * @since version 2.1.5\r\n\t\t * @instance\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate\r\n\t\t * extension, in which case no datasets will be updated and the afterDatasetsUpdate\r\n\t\t * notification will be skipped.\r\n\t\t * @protected\r\n\t\t * @instance\r\n\t\t */\r\n\t\tupdateDatasets: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tif (Chart.plugins.notify('beforeDatasetsUpdate', [ me ])) {\r\n\t\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\t\tme.getDatasetMeta(i).controller.update();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tChart.plugins.notify('afterDatasetsUpdate', [ me ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trender: function render(duration, lazy) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.plugins.notify('beforeRender', [me]);\r\n\r\n\t\t\tvar animationOptions = me.options.animation;\r\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; //60 fps\r\n\t\t\t\tanimation.easing = animationOptions.easing;\r\n\r\n\t\t\t\t// render function\r\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\r\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// user events\r\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\r\n\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\r\n\r\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\r\n\t\t\t} else {\r\n\t\t\t\tme.draw();\r\n\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\r\n\t\t\t\t\tanimationOptions.onComplete.call(me);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tme.clear();\r\n\r\n\t\t\tChart.plugins.notify('beforeDraw', [me, easingDecimal]);\r\n\r\n\t\t\t// Draw all the scales\r\n\t\t\thelpers.each(me.boxes, function(box) {\r\n\t\t\t\tbox.draw(me.chartArea);\r\n\t\t\t}, me);\r\n\t\t\tif (me.scale) {\r\n\t\t\t\tme.scale.draw();\r\n\t\t\t}\r\n\r\n\t\t\tChart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\r\n\r\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(ease);\r\n\t\t\t\t}\r\n\t\t\t}, me, true);\r\n\r\n\t\t\tChart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\r\n\r\n\t\t\t// Finally draw the tooltip\r\n\t\t\tme.tooltip.transition(easingDecimal).draw();\r\n\r\n\t\t\tChart.plugins.notify('afterDraw', [me, easingDecimal]);\r\n\t\t},\r\n\r\n\t\t// Get the single element that was clicked on\r\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\tgetElementAtEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\telementsArray.push(element);\r\n\t\t\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\tvar found = (function() {\r\n\t\t\t\tif (me.data.datasets) {\r\n\t\t\t\t\tfor (var i = 0; i < me.data.datasets.length; i++) {\r\n\t\t\t\t\t\tvar meta = me.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (me.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\r\n\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\t\treturn meta.data[j];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).call(me);\r\n\r\n\t\t\tif (!found) {\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\telementsArray.push(meta.data[found._index]);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEventForMode: function(e, mode) {\r\n\t\t\tvar me = this;\r\n\t\t\tswitch (mode) {\r\n\t\t\tcase 'single':\r\n\t\t\t\treturn me.getElementAtEvent(e);\r\n\t\t\tcase 'label':\r\n\t\t\t\treturn me.getElementsAtEvent(e);\r\n\t\t\tcase 'dataset':\r\n\t\t\t\treturn me.getDatasetAtEvent(e);\r\n\t\t\tdefault:\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\tvar elementsArray = this.getElementAtEvent(e);\r\n\r\n\t\t\tif (elementsArray.length > 0) {\r\n\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\r\n\t\t\t}\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\r\n\t\t\tif (!dataset._meta) {\r\n\t\t\t\tdataset._meta = {};\r\n\t\t\t}\r\n\r\n\t\t\tvar meta = dataset._meta[me.id];\r\n\t\t\tif (!meta) {\r\n\t\t\t\tmeta = dataset._meta[me.id] = {\r\n\t\t\t\ttype: null,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tdataset: null,\r\n\t\t\t\tcontroller: null,\r\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\txAxisID: null,\r\n\t\t\t\tyAxisID: null\r\n\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn meta;\r\n\t\t},\r\n\r\n\t\tgetVisibleDatasetCount: function() {\r\n\t\t\tvar count = 0;\r\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\t if (this.isDatasetVisible(i)) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t},\r\n\r\n\t\tgenerateLegend: function generateLegend() {\r\n\t\t\treturn this.options.legendCallback(this);\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.stop();\r\n\t\t\tme.clear();\r\n\t\t\thelpers.unbindEvents(me, me.events);\r\n\t\t\thelpers.removeResizeListener(me.chart.canvas.parentNode);\r\n\r\n\t\t\t// Reset canvas height/width attributes\r\n\t\t\tvar canvas = me.chart.canvas;\r\n\t\t\tcanvas.width = me.chart.width;\r\n\t\t\tcanvas.height = me.chart.height;\r\n\r\n\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\r\n\t\t\tif (me.chart.originalDevicePixelRatio !== undefined) {\r\n\t\t\t\tme.chart.ctx.scale(1 / me.chart.originalDevicePixelRatio, 1 / me.chart.originalDevicePixelRatio);\r\n\t\t\t}\r\n\r\n\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\r\n\t\t\tcanvas.style.width = me.chart.originalCanvasStyleWidth;\r\n\t\t\tcanvas.style.height = me.chart.originalCanvasStyleHeight;\r\n\r\n\t\t\tChart.plugins.notify('destroy', [me]);\r\n\r\n\t\t\tdelete Chart.instances[me.id];\r\n\t\t},\r\n\r\n\t\ttoBase64Image: function toBase64Image() {\r\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t},\r\n\r\n\t\tinitToolTip: function initToolTip() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tooltip = new Chart.Tooltip({\r\n\t\t\t\t_chart: me.chart,\r\n\t\t\t\t_chartInstance: me,\r\n\t\t\t\t_data: me.data,\r\n\t\t\t\t_options: me.options.tooltips\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tbindEvents: function bindEvents() {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.bindEvents(me, me.options.events, function(evt) {\r\n\t\t\t\tme.eventHandler(evt);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\tvar element, i, ilen;\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\tcase 'single':\r\n\t\t\t\telements = [ elements[0] ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'label':\r\n\t\t\tcase 'dataset':\r\n\t\t\t\t// elements = elements;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// unsupported mode\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\telement = elements[i];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\teventHandler: function eventHandler(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar tooltip = me.tooltip;\r\n\t\t\tvar options = me.options || {};\r\n\t\t\tvar hoverOptions = options.hover;\r\n\t\t\tvar tooltipsOptions = options.tooltips;\r\n\r\n\t\t\tme.lastActive = me.lastActive || [];\r\n\t\t\tme.lastTooltipActive = me.lastTooltipActive || [];\r\n\r\n\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme.active = [];\r\n\t\t\t\tme.tooltipActive = [];\r\n\t\t\t} else {\r\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode);\r\n\t\t\t\tme.tooltipActive =  me.getElementsAtEventForMode(e, tooltipsOptions.mode);\r\n\t\t\t}\r\n\r\n\t\t\t// On Hover hook\r\n\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\thoverOptions.onHover.call(me, me.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\toptions.onClick.call(me, e, me.active);\r\n\t\t\t\t}\r\n\t\t\t\tif (me.legend && me.legend.handleEvent) {\r\n\t\t\t\t\tme.legend.handleEvent(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\tif (me.lastActive.length) {\r\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in hover styling\r\n\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in Tooltips\r\n\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\ttooltip.initialize();\r\n\t\t\t\ttooltip._active = me.tooltipActive;\r\n\t\t\t\ttooltip.update(true);\r\n\t\t\t}\r\n\r\n\t\t\t// Hover animations\r\n\t\t\ttooltip.pivot();\r\n\r\n\t\t\tif (!me.animating) {\r\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\tif (!helpers.arrayEquals(me.active, me.lastActive) ||\r\n\t\t\t\t\t!helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)) {\r\n\r\n\t\t\t\t\tme.stop();\r\n\r\n\t\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\t\tme.render(hoverOptions.animationDuration, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tme.lastActive = me.active;\r\n\t\t\tme.lastTooltipActive = me.tooltipActive;\r\n\t\t\treturn me;\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\t// Base class for all dataset controllers (line, bar, etc)\r\n\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\tthis.initialize.call(this, chart, datasetIndex);\r\n\t};\r\n\r\n\thelpers.extend(Chart.DatasetController.prototype, {\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdatasetElementType: null,\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdataElementType: null,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tme.chart = chart;\r\n\t\t\tme.index = datasetIndex;\r\n\t\t\tme.linkScales();\r\n\t\t\tme.addElements();\r\n\t\t},\r\n\r\n\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t},\r\n\r\n\t\tlinkScales: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDataset: function() {\r\n\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t},\r\n\r\n\t\tgetMeta: function() {\r\n\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t},\r\n\r\n\t\tgetScaleForId: function(scaleID) {\r\n\t\t\treturn this.chart.scales[scaleID];\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tthis.update(true);\r\n\t\t},\r\n\r\n\t\tcreateMetaDataset: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.datasetElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tcreateMetaData: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.dataElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\tvar metaData = meta.data;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(meta, i);\r\n\t\t\t}\r\n\r\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar element = me.createMetaData(index);\r\n\t\t\tme.getMeta().data.splice(index, 0, element);\r\n\t\t\tme.updateElement(element, index, true);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateElements: function buildOrUpdateElements() {\r\n\t\t\t// Handle the number of data points changing\r\n\t\t\tvar meta = this.getMeta(),\r\n\t\t\t\tmd = meta.data,\r\n\t\t\t\tnumData = this.getDataset().data.length,\r\n\t\t\t\tnumMetaData = md.length;\r\n\r\n\t\t\t// Make sure that we handle number of datapoints changing\r\n\t\t\tif (numData < numMetaData) {\r\n\t\t\t\t// Remove excess bars for data points that have been removed\r\n\t\t\t\tmd.splice(numData, numMetaData - numData);\r\n\t\t\t} else if (numData > numMetaData) {\r\n\t\t\t\t// Add new elements\r\n\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\r\n\t\t\t\t\tthis.addElementAndReset(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: noop,\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(element, index) {\r\n\t\t\t\telement.transition(easingDecimal).draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tcolor = helpers.color,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(element) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tcolor = helpers.color,\r\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.DatasetController.extend = helpers.inherits;\r\n};\n},{}],24:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n  var helpers = Chart.helpers;\r\n\r\n  Chart.elements = {};\r\n\r\n  Chart.Element = function(configuration) {\r\n    helpers.extend(this, configuration);\r\n    this.initialize.apply(this, arguments);\r\n  };\r\n\r\n  helpers.extend(Chart.Element.prototype, {\r\n\r\n    initialize: function() {\r\n      this.hidden = false;\r\n    },\r\n\r\n    pivot: function() {\r\n      var me = this;\r\n      if (!me._view) {\r\n        me._view = helpers.clone(me._model);\r\n      }\r\n      me._start = helpers.clone(me._view);\r\n      return me;\r\n    },\r\n\r\n    transition: function(ease) {\r\n      var me = this;\r\n      \r\n      if (!me._view) {\r\n        me._view = helpers.clone(me._model);\r\n      }\r\n\r\n      // No animation -> No Transition\r\n      if (ease === 1) {\r\n        me._view = me._model;\r\n        me._start = null;\r\n        return me;\r\n      }\r\n\r\n      if (!me._start) {\r\n        me.pivot();\r\n      }\r\n\r\n      helpers.each(me._model, function(value, key) {\r\n\r\n        if (key[0] === '_') {\r\n          // Only non-underscored properties\r\n        }\r\n\r\n        // Init if doesn't exist\r\n        else if (!me._view.hasOwnProperty(key)) {\r\n          if (typeof value === 'number' && !isNaN(me._view[key])) {\r\n            me._view[key] = value * ease;\r\n          } else {\r\n            me._view[key] = value;\r\n          }\r\n        }\r\n\r\n        // No unnecessary computations\r\n        else if (value === me._view[key]) {\r\n          // It's the same! Woohoo!\r\n        }\r\n\r\n        // Color transitions if possible\r\n        else if (typeof value === 'string') {\r\n          try {\r\n            var color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\r\n            me._view[key] = color.rgbString();\r\n          } catch (err) {\r\n            me._view[key] = value;\r\n          }\r\n        }\r\n        // Number transitions\r\n        else if (typeof value === 'number') {\r\n          var startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\r\n          me._view[key] = ((me._model[key] - startVal) * ease) + startVal;\r\n        }\r\n        // Everything else\r\n        else {\r\n          me._view[key] = value;\r\n        }\r\n      }, me);\r\n\r\n      return me;\r\n    },\r\n\r\n    tooltipPosition: function() {\r\n      return {\r\n        x: this._model.x,\r\n        y: this._model.y\r\n      };\r\n    },\r\n\r\n    hasValue: function() {\r\n      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n    }\r\n  });\r\n\r\n  Chart.Element.extend = helpers.inherits;\r\n\r\n};\r\n\n},{}],25:[function(require,module,exports){\n/*global window: false */\r\n/*global document: false */\r\n\"use strict\";\r\n\r\nvar color = require(3);\r\n\r\nmodule.exports = function(Chart) {\r\n\t//Global Chart helpers object for utility methods and classes\r\n\tvar helpers = Chart.helpers = {};\r\n\r\n\t//-- Basic js utility methods\r\n\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t// Check to see if null or undefined firstly.\r\n\t\tvar i, len;\r\n\t\tif (helpers.isArray(loopable)) {\r\n\t\t\tlen = loopable.length;\r\n\t\t\tif (reverse) {\r\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof loopable === 'object') {\r\n\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.clone = function(obj) {\r\n\t\tvar objClone = {};\r\n\t\thelpers.each(obj, function(value, key) {\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t} else {\r\n\t\t\t\tobjClone[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn objClone;\r\n\t};\r\n\thelpers.extend = function(base) {\r\n\t\tvar setFn = function(value, key) { base[key] = value; };\r\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\r\n\t\t\thelpers.each(arguments[i], setFn);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\t// Need a special merge function to chart configs since they are now grouped\r\n\thelpers.configMerge = function(_base) {\r\n\t\tvar base = helpers.clone(_base);\r\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\r\n\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\r\n\r\n\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\r\n\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\r\n\t\t\t\t\t// merge. This allows easy scale option merging\r\n\t\t\t\t\tvar baseArray = base[key];\r\n\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\r\n\t\t\t\t\t\tif (index < baseArray.length) {\r\n\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\r\n\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\r\n\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\r\n\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.scaleMerge = function(_base, extension) {\r\n\t\tvar base = helpers.clone(_base);\r\n\r\n\t\thelpers.each(extension, function(value, key) {\r\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t// These properties are arrays of items\r\n\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\tbase[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(value)) {\r\n\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\treturn value === undefined ? defaultValue : value;\r\n\t};\r\n\thelpers.indexOf = Array.prototype.indexOf?\r\n\t\tfunction(array, item) { return array.indexOf(item); } :\r\n\t\tfunction(array, item) {\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (array[i] === item) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.where = function(collection, filterCallback) {\r\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\treturn collection.filter(filterCallback);\r\n\t\t} else {\r\n\t\t\tvar filtered = [];\r\n\r\n\t\t\thelpers.each(collection, function(item) {\r\n\t\t\t\tif (filterCallback(item)) {\r\n\t\t\t\t\tfiltered.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn filtered;\r\n\t\t}\r\n\t};\r\n\thelpers.findIndex = Array.prototype.findIndex?\r\n\t\tfunction(array, callback, scope) { return array.findIndex(callback, scope); } :\r\n\t\tfunction(array, callback, scope) {\r\n\t\t\tscope = scope === undefined? array : scope;\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to start of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = -1;\r\n\t\t}\r\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to end of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t}\r\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.inherits = function(extensions) {\r\n\t\t//Basic javascript inheritance based on the model created in Backbone.js\r\n\t\tvar parent = this;\r\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function() {\r\n\t\t\treturn parent.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\tvar Surrogate = function() {\r\n\t\t\tthis.constructor = ChartElement;\r\n\t\t};\r\n\t\tSurrogate.prototype = parent.prototype;\r\n\t\tChartElement.prototype = new Surrogate();\r\n\r\n\t\tChartElement.extend = helpers.inherits;\r\n\r\n\t\tif (extensions) {\r\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t}\r\n\r\n\t\tChartElement.__super__ = parent.prototype;\r\n\r\n\t\treturn ChartElement;\r\n\t};\r\n\thelpers.noop = function() {};\r\n\thelpers.uid = (function() {\r\n\t\tvar id = 0;\r\n\t\treturn function() {\r\n\t\t\treturn id++;\r\n\t\t};\r\n\t})();\r\n\t//-- Math methods\r\n\thelpers.isNumber = function(n) {\r\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t};\r\n\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\treturn Math.abs(x - y) < epsilon;\r\n\t};\r\n\thelpers.max = function(array) {\r\n\t\treturn array.reduce(function(max, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.max(max, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\t\t}, Number.NEGATIVE_INFINITY);\r\n\t};\r\n\thelpers.min = function(array) {\r\n\t\treturn array.reduce(function(min, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.min(min, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn min;\r\n\t\t\t}\r\n\t\t}, Number.POSITIVE_INFINITY);\r\n\t};\r\n\thelpers.sign = Math.sign?\r\n\t\tfunction(x) { return Math.sign(x); } :\r\n\t\tfunction(x) {\r\n\t\t\tx = +x; // convert to a number\r\n\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t};\r\n\thelpers.log10 = Math.log10?\r\n\t\tfunction(x) { return Math.log10(x); } :\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t};\r\n\thelpers.toRadians = function(degrees) {\r\n\t\treturn degrees * (Math.PI / 180);\r\n\t};\r\n\thelpers.toDegrees = function(radians) {\r\n\t\treturn radians * (180 / Math.PI);\r\n\t};\r\n\t// Gets the angle from vertical upright to the point about a centre.\r\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tangle: angle,\r\n\t\t\tdistance: radialDistanceFromCenter\r\n\t\t};\r\n\t};\r\n\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t};\r\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n\t\t// This function must also respect \"skipped\" points\r\n\r\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\tcurrent = middlePoint,\r\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n\t\tvar s01 = d01 / (d01 + d12);\r\n\t\tvar s12 = d12 / (d01 + d12);\r\n\r\n\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\r\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\tvar fb = t * s12;\r\n\r\n\t\treturn {\r\n\t\t\tprevious: {\r\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.nextItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t}\r\n\r\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t};\r\n\thelpers.previousItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t}\r\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t};\r\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\thelpers.niceNum = function(range, round) {\r\n\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\tvar niceFraction;\r\n\r\n\t\tif (round) {\r\n\t\t\tif (fraction < 1.5) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction < 3) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction < 7) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (fraction <= 1.0) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction <= 2) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction <= 5) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t};\r\n\t//Easing functions adapted from Robert Penner's easing equations\r\n\t//http://www.robertpenner.com/easing/\r\n\tvar easingEffects = helpers.easingEffects = {\r\n\t\tlinear: function(t) {\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\teaseInQuad: function(t) {\r\n\t\t\treturn t * t;\r\n\t\t},\r\n\t\teaseOutQuad: function(t) {\r\n\t\t\treturn -1 * t * (t - 2);\r\n\t\t},\r\n\t\teaseInOutQuad: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t},\r\n\t\teaseInCubic: function(t) {\r\n\t\t\treturn t * t * t;\r\n\t\t},\r\n\t\teaseOutCubic: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutCubic: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t},\r\n\t\teaseInQuart: function(t) {\r\n\t\t\treturn t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuart: function(t) {\r\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t},\r\n\t\teaseInOutQuart: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t},\r\n\t\teaseInQuint: function(t) {\r\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuint: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutQuint: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t},\r\n\t\teaseInSine: function(t) {\r\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t},\r\n\t\teaseOutSine: function(t) {\r\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t},\r\n\t\teaseInOutSine: function(t) {\r\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t},\r\n\t\teaseInExpo: function(t) {\r\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t},\r\n\t\teaseOutExpo: function(t) {\r\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t},\r\n\t\teaseInOutExpo: function(t) {\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (t === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\teaseInCirc: function(t) {\r\n\t\t\tif (t >= 1) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t},\r\n\t\teaseOutCirc: function(t) {\r\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t},\r\n\t\teaseInOutCirc: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t},\r\n\t\teaseInElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t},\r\n\t\teaseOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t},\r\n\t\teaseInOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t},\r\n\t\teaseInBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t},\r\n\t\teaseOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t},\r\n\t\teaseInOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t},\r\n\t\teaseInBounce: function(t) {\r\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t},\r\n\t\teaseOutBounce: function(t) {\r\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t} else {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t\t}\r\n\t\t},\r\n\t\teaseInOutBounce: function(t) {\r\n\t\t\tif (t < 1 / 2) {\r\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t}\r\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t}\r\n\t};\r\n\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\thelpers.requestAnimFrame = (function() {\r\n\t\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\thelpers.cancelAnimFrame = (function() {\r\n\t\treturn window.cancelAnimationFrame ||\r\n\t\t\twindow.webkitCancelAnimationFrame ||\r\n\t\t\twindow.mozCancelAnimationFrame ||\r\n\t\t\twindow.oCancelAnimationFrame ||\r\n\t\t\twindow.msCancelAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\t//-- DOM methods\r\n\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\tvar mouseX, mouseY;\r\n\t\tvar e = evt.originalEvent || evt,\r\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\r\n\t\tvar touches = e.touches;\r\n\t\tif (touches && touches.length > 0) {\r\n\t\t\tmouseX = touches[0].clientX;\r\n\t\t\tmouseY = touches[0].clientY;\r\n\r\n\t\t} else {\r\n\t\t\tmouseX = e.clientX;\r\n\t\t\tmouseY = e.clientY;\r\n\t\t}\r\n\r\n\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n\t\treturn {\r\n\t\t\tx: mouseX,\r\n\t\t\ty: mouseY\r\n\t\t};\r\n\r\n\t};\r\n\thelpers.addEvent = function(node, eventType, method) {\r\n\t\tif (node.addEventListener) {\r\n\t\t\tnode.addEventListener(eventType, method);\r\n\t\t} else if (node.attachEvent) {\r\n\t\t\tnode.attachEvent(\"on\" + eventType, method);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = method;\r\n\t\t}\r\n\t};\r\n\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\tif (node.removeEventListener) {\r\n\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t} else if (node.detachEvent) {\r\n\t\t\tnode.detachEvent(\"on\" + eventType, handler);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = helpers.noop;\r\n\t\t}\r\n\t};\r\n\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\r\n\t\t// Create the events object if it's not already present\r\n\t\tvar events = chartInstance.events = chartInstance.events || {};\r\n\r\n\t\thelpers.each(arrayOfEvents, function(eventName) {\r\n\t\t\tevents[eventName] = function() {\r\n\t\t\t\thandler.apply(chartInstance, arguments);\r\n\t\t\t};\r\n\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\r\n\t\t});\r\n\t};\r\n\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\r\n\t\tvar canvas = chartInstance.chart.canvas;\r\n\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\r\n\t\t\thelpers.removeEvent(canvas, eventName, handler);\r\n\t\t});\r\n\t};\r\n\r\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\tvar valueInPixels;\r\n\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\r\n\t\t\tif (styleValue.indexOf('%') != -1) {\r\n\t\t\t\t// percentage * size in dimension\r\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalueInPixels = styleValue;\r\n\t\t}\r\n\r\n\t\treturn valueInPixels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the given value contains an effective constraint.\r\n\t * @private\r\n\t */\r\n\tfunction isConstrainedValue(value) {\r\n\t\treturn value !== undefined &&  value !== null && value !== 'none';\r\n\t}\r\n\r\n\t// Private helper to get a constraint dimension\r\n\t// @param domNode : the node to check the constraint on\r\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\tvar view = document.defaultView;\r\n\t\tvar parentNode = domNode.parentNode;\r\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\r\n\t\tif (hasCNode || hasCContainer) {\r\n\t\t\treturn Math.min(\r\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t}\r\n\r\n\t\treturn 'none';\r\n\t}\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintWidth = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t};\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintHeight = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t};\r\n\thelpers.getMaximumWidth = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-left')) + parseInt(helpers.getStyle(container, 'padding-right'));\r\n\t\tvar w = container.clientWidth - padding;\r\n\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t};\r\n\thelpers.getMaximumHeight = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-top')) + parseInt(helpers.getStyle(container, 'padding-bottom'));\r\n\t\tvar h = container.clientHeight - padding;\r\n\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t};\r\n\thelpers.getStyle = function(el, property) {\r\n\t\treturn el.currentStyle ?\r\n\t\t\tel.currentStyle[property] :\r\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t};\r\n\thelpers.retinaScale = function(chart) {\r\n\t\tvar ctx = chart.ctx;\r\n\t\tvar canvas = chart.canvas;\r\n\t\tvar width = canvas.width;\r\n\t\tvar height = canvas.height;\r\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n\t\tif (pixelRatio !== 1) {\r\n\t\t\tcanvas.height = height * pixelRatio;\r\n\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\r\n\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\r\n\t\t\t// when destroy is called\r\n\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\r\n\t\t}\r\n\r\n\t\tcanvas.style.width = width + 'px';\r\n\t\tcanvas.style.height = height + 'px';\r\n\t};\r\n\t//-- Canvas methods\r\n\thelpers.clear = function(chart) {\r\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t};\r\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\treturn fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\r\n\t};\r\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n\t\tcache = cache || {};\r\n\t\tvar data = cache.data = cache.data || {};\r\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n\t\tif (cache.font !== font) {\r\n\t\t\tdata = cache.data = {};\r\n\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\tcache.font = font;\r\n\t\t}\r\n\r\n\t\tctx.font = font;\r\n\t\tvar longest = 0;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\r\n\t\t\t} else if (helpers.isArray(thing)) {\r\n\t\t\t\t// if it is an array lets measure each element\r\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\r\n\t\t\t\thelpers.each(thing, function(nestedThing) {\r\n\t\t\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar gcLen = gc.length / 2;\r\n\t\tif (gcLen > arrayOfThings.length) {\r\n\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\tdelete data[gc[i]];\r\n\t\t\t}\r\n\t\t\tgc.splice(0, gcLen);\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.measureText = function (ctx, data, gc, longest, string) {\r\n\t\tvar textWidth = data[string];\r\n\t\tif (!textWidth) {\r\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\tgc.push(string);\r\n\t\t}\r\n\t\tif (textWidth > longest) {\r\n\t\t\tlongest = textWidth;\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\r\n\t\tvar numberOfLines = 1;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\tif (helpers.isArray(thing)) {\r\n\t\t\t\tif (thing.length > numberOfLines) {\r\n\t\t\t\t\tnumberOfLines = thing.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn numberOfLines;\r\n\t};\r\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x + radius, y);\r\n\t\tctx.lineTo(x + width - radius, y);\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\tctx.lineTo(x + radius, y + height);\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\tctx.lineTo(x, y + radius);\r\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\tctx.closePath();\r\n\t};\r\n\thelpers.color = function(c) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.log('Color.js not found!');\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\t/* global CanvasGradient */\r\n\t\tif (c instanceof CanvasGradient) {\r\n\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t}\r\n\r\n\t\treturn color(c);\r\n\t};\r\n\thelpers.addResizeListener = function(node, callback) {\r\n\t\t// Hide an iframe before the node\r\n\t\tvar hiddenIframe = document.createElement('iframe');\r\n\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\r\n\r\n\t\tif (hiddenIframe.classlist) {\r\n\t\t\t// can use classlist\r\n\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\r\n\t\t} else {\r\n\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\r\n\t\t}\r\n\r\n\t\t// Set the style\r\n\t\tvar style = hiddenIframe.style;\r\n\t\tstyle.width = '100%';\r\n\t\tstyle.display = 'block';\r\n\t\tstyle.border = 0;\r\n\t\tstyle.height = 0;\r\n\t\tstyle.margin = 0;\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.left = 0;\r\n\t\tstyle.right = 0;\r\n\t\tstyle.top = 0;\r\n\t\tstyle.bottom = 0;\r\n\r\n\t\t// Insert the iframe so that contentWindow is available\r\n\t\tnode.insertBefore(hiddenIframe, node.firstChild);\r\n\r\n\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.removeResizeListener = function(node) {\r\n\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\r\n\r\n\t\t// Remove the resize detect iframe\r\n\t\tif (hiddenIframe) {\r\n\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\r\n\t\t}\r\n\t};\r\n\thelpers.isArray = Array.isArray?\r\n\t\tfunction(obj) { return Array.isArray(obj); } :\r\n\t\tfunction(obj) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t};\r\n\t//! @see http://stackoverflow.com/a/14853974\r\n\thelpers.arrayEquals = function(a0, a1) {\r\n\t\tvar i, ilen, v0, v1;\r\n\r\n\t\tif (!a0 || !a1 || a0.length != a1.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\tv0 = a0[i];\r\n\t\t\tv1 = a1[i];\r\n\r\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (v0 != v1) {\r\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\tfn.apply(_tArg, args);\r\n\t\t}\r\n\t};\r\n\thelpers.getHoverColor = function(color) {\r\n\t\t/* global CanvasPattern */\r\n\t\treturn (color instanceof CanvasPattern) ?\r\n\t\t\tcolor :\r\n\t\t\thelpers.color(color).saturate(0.5).darken(0.1).rgbString();\r\n\t};\r\n};\r\n\n},{\"3\":3}],26:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function() {\r\n\r\n\t//Occupy the global variable of Chart, and create a simple base class\r\n\tvar Chart = function(context, config) {\r\n\t\tvar me = this;\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tme.config = config;\r\n\r\n\t\t// Support a jQuery'd canvas element\r\n\t\tif (context.length && context[0].getContext) {\r\n\t\t\tcontext = context[0];\r\n\t\t}\r\n\r\n\t\t// Support a canvas domnode\r\n\t\tif (context.getContext) {\r\n\t\t\tcontext = context.getContext(\"2d\");\r\n\t\t}\r\n\r\n\t\tme.ctx = context;\r\n\t\tme.canvas = context.canvas;\r\n\r\n\t\tcontext.canvas.style.display = context.canvas.style.display || 'block';\r\n\r\n\t\t// Figure out what the size of the chart will be.\r\n\t\t// If the canvas has a specified width and height, we use those else\r\n\t\t// we look to see if the canvas node has a CSS width and height.\r\n\t\t// If there is still no height, fill the parent container\r\n\t\tme.width = context.canvas.width || parseInt(helpers.getStyle(context.canvas, 'width'), 10) || helpers.getMaximumWidth(context.canvas);\r\n\t\tme.height = context.canvas.height || parseInt(helpers.getStyle(context.canvas, 'height'), 10) || helpers.getMaximumHeight(context.canvas);\r\n\r\n\t\tme.aspectRatio = me.width / me.height;\r\n\r\n\t\tif (isNaN(me.aspectRatio) || isFinite(me.aspectRatio) === false) {\r\n\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\r\n\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\r\n\t\t\t// else use the canvas default ratio of 2\r\n\t\t\tme.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\r\n\t\t}\r\n\r\n\t\t// Store the original style of the element so we can set it back\r\n\t\tme.originalCanvasStyleWidth = context.canvas.style.width;\r\n\t\tme.originalCanvasStyleHeight = context.canvas.style.height;\r\n\r\n\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\r\n\t\thelpers.retinaScale(me);\r\n\r\n\t\tif (config) {\r\n\t\t\tme.controller = new Chart.Controller(me);\r\n\t\t}\r\n\r\n\t\t// Always bind this so that if the responsive state changes we still work\r\n\t\thelpers.addResizeListener(context.canvas.parentNode, function() {\r\n\t\t\tif (me.controller && me.controller.config.options.responsive) {\r\n\t\t\t\tme.controller.resize();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn me.controller ? me.controller : me;\r\n\r\n\t};\r\n\r\n\t//Globally expose the defaults to allow for user updating/changing\r\n\tChart.defaults = {\r\n\t\tglobal: {\r\n\t\t\tresponsive: true,\r\n\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tevents: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"],\r\n\t\t\thover: {\r\n\t\t\t\tonHover: null,\r\n\t\t\t\tmode: 'single',\r\n\t\t\t\tanimationDuration: 400\r\n\t\t\t},\r\n\t\t\tonClick: null,\r\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\tdefaultFontColor: '#666',\r\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\tdefaultFontSize: 12,\r\n\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\tshowLines: true,\r\n\r\n\t\t\t// Element defaults defined in element extensions\r\n\t\t\telements: {},\r\n\r\n\t\t\t// Legend callback string\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t\ttext.push('</ul>');\r\n\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Chart = Chart;\r\n\r\n\treturn Chart;\r\n\r\n};\r\n\n},{}],27:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t// It is this service's responsibility of carrying out that layout.\r\n\tChart.layoutService = {\r\n\t\tdefaults: {},\r\n\r\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\taddBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.push(box);\r\n\t\t},\r\n\r\n\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t},\r\n\r\n\t\t// The most important function\r\n\t\tupdate: function(chartInstance, width, height) {\r\n\r\n\t\t\tif (!chartInstance) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar xPadding = 0;\r\n\t\t\tvar yPadding = 0;\r\n\r\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"left\";\r\n\t\t\t});\r\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"right\";\r\n\t\t\t});\r\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"top\";\r\n\t\t\t});\r\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"bottom\";\r\n\t\t\t});\r\n\r\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"chartArea\";\r\n\t\t\t});\r\n\r\n\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t// Our canvas looks like the following.\r\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t// B1 is the bottom axis\r\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t// an error will be thrown.\r\n\t\t\t//\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t//\r\n\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t// 6. Refit each axis\r\n\t\t\t// 7. Position each axis in the final location\r\n\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n\t\t\t// Step 1\r\n\t\t\tvar chartWidth = width - (2 * xPadding);\r\n\t\t\tvar chartHeight = height - (2 * yPadding);\r\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n\t\t\t// Step 2\r\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n\t\t\t// Step 3\r\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n\t\t\t// Step 4\r\n\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\tvar minBoxSizes = [];\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\tvar minSize;\r\n\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\tbox: box\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\r\n\t\t\t// Steps 5 & 6\r\n\t\t\tvar totalLeftBoxesWidth = xPadding;\r\n\t\t\tvar totalRightBoxesWidth = xPadding;\r\n\t\t\tvar totalTopBoxesHeight = yPadding;\r\n\t\t\tvar totalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n\t\t\t// Function to fit a box\r\n\t\t\tfunction fitBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\t\t\tright: totalRightBoxesWidth,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Let the left layout know the final margin\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\ttotalLeftBoxesWidth = xPadding;\r\n\t\t\ttotalRightBoxesWidth = xPadding;\r\n\t\t\ttotalTopBoxesHeight = yPadding;\r\n\t\t\ttotalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t// without calling `fit` again\r\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// Step 7 - Position the boxes\r\n\t\t\tvar left = xPadding;\r\n\t\t\tvar top = yPadding;\r\n\t\t\tvar right = 0;\r\n\t\t\tvar bottom = 0;\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n\t\t\t// Account for chart width and height\r\n\t\t\tleft += maxChartAreaWidth;\r\n\t\t\ttop += maxChartAreaHeight;\r\n\r\n\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\r\n\t\t\tfunction placeBox(box) {\r\n\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\tbox.bottom = top + box.height;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\ttop = box.bottom;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\tleft = box.right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Step 8\r\n\t\t\tchartInstance.chartArea = {\r\n\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Step 9\r\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\r\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\n},{}],28:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.legend = {\r\n\r\n\t\tdisplay: true,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\treverse: false,\r\n\r\n\t\t// a callback that will handle\r\n\t\tonClick: function(e, legendItem) {\r\n\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\tvar ci = this.chart;\r\n\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\r\n\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\r\n\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\tci.update();\r\n\t\t},\r\n\r\n\t\tlabels: {\r\n\t\t\tboxWidth: 40,\r\n\t\t\tpadding: 10,\r\n\t\t\t// Generates labels shown in the legend\r\n\t\t\t// Valid properties to return:\r\n\t\t\t// text : text to display\r\n\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t// lineCap : cap style for line\r\n\t\t\t// lineDash\r\n\t\t\t// lineDashOffset :\r\n\t\t\t// lineJoin :\r\n\t\t\t// lineWidth :\r\n\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\r\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t};\r\n\t\t\t\t}, this) : [];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Legend = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\r\n\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\tthis.doughnutMode = false;\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all legend types.\r\n\t\t// Any function can be extended by the legend type\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.legendItems = me.options.labels.generateLabels.call(me, me.chart);\r\n\t\t\tif(me.options.reverse){\r\n\t\t\t\tme.legendItems.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar display = opts.display;\r\n\r\n\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t// Reset hit boxes\r\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\r\n\r\n\t\t\tvar minSize = me.minSize;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Increase sizes here\r\n\t\t\tif (display) {\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// Labels\r\n\r\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\r\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar width = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tminSize.height += totalHeight;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar vPadding = labelOpts.padding;\r\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\r\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\r\n\t\t\t\t\tvar currentColWidth = 0;\r\n\t\t\t\t\tvar currentColHeight = 0;\r\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar itemWidth = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n\t\t\t\t\t\t// If too tall, go to new column\r\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\r\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\r\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\r\n\r\n\t\t\t\t\t\t\tcurrentColWidth = 0;\r\n\t\t\t\t\t\t\tcurrentColHeight = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get max width\r\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\r\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: itemWidth,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttotalWidth += currentColWidth;\r\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\r\n\t\t\t\t\tminSize.width += totalWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the legend on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\tlegendWidth = me.width,\r\n\t\t\t\tlegendHeight = me.height,\r\n\t\t\t\tlineWidths = me.lineWidths;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx,\r\n\t\t\t\t\tcursor,\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t\t// Canvas setup\r\n\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tvar boxWidth = labelOpts.boxWidth,\r\n\t\t\t\t\thitboxes = me.legendHitBoxes;\r\n\r\n\t\t\t\t// current position\r\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\r\n\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\tctx.save();\r\n\r\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\r\n\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Draw the box\r\n\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t};\r\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\r\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\r\n\t\t\t\t\t\ty: me.top,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\r\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\ty = cursor.y;\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\ty = cursor.y += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (y + itemHeight > me.bottom) {\r\n\t\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n\t\t\t\t\t\t\ty = cursor.y = me.top;\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\r\n\r\n\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\thitboxes[i].top = y;\r\n\r\n\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcursor.y += itemHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Handle an event\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar position = helpers.getRelativePosition(e, me.chart.chart),\r\n\t\t\t\tx = position.x,\r\n\t\t\t\ty = position.y,\r\n\t\t\t\topts = me.options;\r\n\r\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\tvar lh = me.legendHitBoxes;\r\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\tvar hitBox = lh[i];\r\n\r\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\tif (opts.onClick) {\r\n\t\t\t\t\t\t\topts.onClick.call(me, e, me.legendItems[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register the legend plugin\r\n\tChart.plugins.register({\r\n\t\tbeforeInit: function(chartInstance) {\r\n\t\t\tvar opts = chartInstance.options;\r\n\t\t\tvar legendOpts = opts.legend;\r\n\r\n\t\t\tif (legendOpts) {\r\n\t\t\t\tchartInstance.legend = new Chart.Legend({\r\n\t\t\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\t\t\toptions: legendOpts,\r\n\t\t\t\t\tchart: chartInstance\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.legend);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],29:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar noop = Chart.helpers.noop;\r\n\r\n\t/**\r\n\t * The plugin service singleton\r\n\t * @namespace Chart.plugins\r\n\t * @since 2.1.0\r\n\t */\r\n\tChart.plugins = {\r\n\t\t_plugins: [],\r\n\r\n\t\t/**\r\n\t\t * Registers the given plugin(s) if not already registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\t\tp.push(plugin);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Unregisters the given plugin(s) only if registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tunregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tp.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all registered p^lugins.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tclear: function() {\r\n\t\t\tthis._plugins = [];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the number of registered plugins?\r\n\t\t * @returns {Number}\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tcount: function() {\r\n\t\t\treturn this._plugins.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns all registered plugin intances.\r\n\t\t * @returns {Array} array of plugin objects.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tgetAll: function() {\r\n\t\t\treturn this._plugins;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calls registered plugins on the specified extension, with the given args. This\r\n\t\t * method immediately returns as soon as a plugin explicitly returns false. The\r\n\t\t * returned value can be used, for instance, to interrupt the current action.\r\n\t\t * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t\t * @param {Array} [args] extra arguments to apply to the extension call.\r\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n\t\t */\r\n\t\tnotify: function(extension, args) {\r\n\t\t\tvar plugins = this._plugins;\r\n\t\t\tvar ilen = plugins.length;\r\n\t\t\tvar i, plugin;\r\n\r\n\t\t\tfor (i=0; i<ilen; ++i) {\r\n\t\t\t\tplugin = plugins[i];\r\n\t\t\t\tif (typeof plugin[extension] === 'function') {\r\n\t\t\t\t\tif (plugin[extension].apply(plugin, args || []) === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin extension methods.\r\n\t * @interface Chart.PluginBase\r\n\t * @since 2.1.0\r\n\t */\r\n\tChart.PluginBase = Chart.Element.extend({\r\n\t\t// Called at start of chart init\r\n\t\tbeforeInit: noop,\r\n\r\n\t\t// Called at end of chart init\r\n\t\tafterInit: noop,\r\n\r\n\t\t// Called at start of update\r\n\t\tbeforeUpdate: noop,\r\n\r\n\t\t// Called at end of update\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t// Called at start of draw\r\n\t\tbeforeDraw: noop,\r\n\r\n\t\t// Called at end of draw\r\n\t\tafterDraw: noop,\r\n\r\n\t\t// Called during destroy\r\n\t\tdestroy: noop\r\n\t});\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.plugins instead\r\n\t * @namespace Chart.pluginService\r\n\t * @deprecated since version 2.1.5\r\n\t * @todo remove me at version 3\r\n\t */\r\n\tChart.pluginService = Chart.plugins;\r\n};\r\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.scale = {\r\n\t\tdisplay: true,\r\n\t\tposition: \"left\",\r\n\r\n\t\t// grid line settings\r\n\t\tgridLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1,\r\n\t\t\tdrawBorder: true,\r\n\t\t\tdrawOnChartArea: true,\r\n\t\t\tdrawTicks: true,\r\n\t\t\ttickMarkLength: 10,\r\n\t\t\tzeroLineWidth: 1,\r\n\t\t\tzeroLineColor: \"rgba(0,0,0,0.25)\",\r\n\t\t\toffsetGridLines: false\r\n\t\t},\r\n\r\n\t\t// scale label\r\n\t\tscaleLabel: {\r\n\t\t\t// actual label\r\n\t\t\tlabelString: '',\r\n\r\n\t\t\t// display property\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tbeginAtZero: false,\r\n\t\t\tminRotation: 0,\r\n\t\t\tmaxRotation: 50,\r\n\t\t\tmirror: false,\r\n\t\t\tpadding: 10,\r\n\t\t\treverse: false,\r\n\t\t\tdisplay: true,\r\n\t\t\tautoSkip: true,\r\n\t\t\tautoSkipPadding: 0,\r\n\t\t\tlabelOffset: 0,\r\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n\t\t\tcallback: function(value) {\r\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Scale = Chart.Element.extend({\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all scale types.\r\n\t\t// Any function can be extended by the scale type\r\n\r\n\t\tbeforeUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = helpers.extend({\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}, margins);\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\r\n\t\t\t// Data min/max\r\n\t\t\tme.beforeDataLimits();\r\n\t\t\tme.determineDataLimits();\r\n\t\t\tme.afterDataLimits();\r\n\r\n\t\t\t// Ticks\r\n\t\t\tme.beforeBuildTicks();\r\n\t\t\tme.buildTicks();\r\n\t\t\tme.afterBuildTicks();\r\n\r\n\t\t\tme.beforeTickToLabelConversion();\r\n\t\t\tme.convertTicksToLabels();\r\n\t\t\tme.afterTickToLabelConversion();\r\n\r\n\t\t\t// Tick Rotation\r\n\t\t\tme.beforeCalculateTickRotation();\r\n\t\t\tme.calculateTickRotation();\r\n\t\t\tme.afterCalculateTickRotation();\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\t\t},\r\n\t\tafterSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t},\r\n\r\n\t\t// Data limits\r\n\t\tbeforeDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t},\r\n\t\tdetermineDataLimits: helpers.noop,\r\n\t\tafterDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\t\tbeforeBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t},\r\n\t\tbuildTicks: helpers.noop,\r\n\t\tafterBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t},\r\n\r\n\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Convert ticks to strings\r\n\t\t\tme.ticks = me.ticks.map(function(numericalTick, index, ticks) {\r\n\t\t\t\t\tif (me.options.ticks.userCallback) {\r\n\t\t\t\t\t\treturn me.options.ticks.userCallback(numericalTick, index, ticks);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.options.ticks.callback(numericalTick, index, ticks);\r\n\t\t\t\t},\r\n\t\t\t\tme);\r\n\t\t},\r\n\t\tafterTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t},\r\n\t\tcalculateTickRotation: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = me.options.ticks;\r\n\r\n\t\t\t//Get the width of each grid by calculating the difference\r\n\t\t\t//between x offsets between 0 and 1.\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tcontext.font = tickLabelFont;\r\n\r\n\t\t\tvar firstWidth = context.measureText(me.ticks[0]).width;\r\n\t\t\tvar lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;\r\n\t\t\tvar firstRotated;\r\n\r\n\t\t\tme.labelRotation = optionTicks.minRotation || 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingLeft = 0;\r\n\r\n\t\t\tif (me.options.display) {\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tme.paddingRight = lastWidth / 2 + 3;\r\n\t\t\t\t\tme.paddingLeft = firstWidth / 2 + 3;\r\n\r\n\t\t\t\t\tif (!me.longestTextCache) {\r\n\t\t\t\t\t\tme.longestTextCache = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);\r\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\t\tvar cosRotation;\r\n\t\t\t\t\tvar sinRotation;\r\n\r\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\r\n\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n\t\t\t\t\t//Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\t\twhile (labelWidth > tickWidth && me.labelRotation < optionTicks.maxRotation) {\r\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(me.labelRotation));\r\n\r\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\r\n\r\n\t\t\t\t\t\t// We're right aligning the text now.\r\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > me.yLabelWidth) {\r\n\t\t\t\t\t\t\tme.paddingLeft = firstRotated + tickFontSize / 2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tme.paddingRight = tickFontSize / 2;\r\n\r\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\r\n\t\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\t\tme.labelRotation--;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tme.labelRotation++;\r\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.margins) {\r\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Reset\r\n\t\t\tvar minSize = me.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\tvar display = opts.display;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n\t\t\t// Width\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? tickMarkLength : 0;\r\n\t\t\t}\r\n\r\n\t\t\t// height\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.height = display ? tickMarkLength : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Are we showing a title for the scale?\r\n\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\t\tif (!me.longestTextCache) {\r\n\t\t\t\t\tme.longestTextCache = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);\r\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\r\n\t\t\t\tvar lineSpace = tickFontSize * 0.5;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\r\n\r\n\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);\r\n\r\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\tme.ctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\tvar firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;\r\n\t\t\t\t\tvar lastLabelWidth = me.ctx.measureText(me.ticks[me.ticks.length - 1]).width;\r\n\r\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t// by the font height\r\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\tme.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\tme.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\tvar maxLabelWidth = me.maxWidth - minSize.width;\r\n\r\n\t\t\t\t\t// Account for padding\r\n\t\t\t\t\tvar mirror = tickOpts.mirror;\r\n\t\t\t\t\tif (!mirror) {\r\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\r\n\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\r\n\t\t\t\t\t\t// We don't need all the room\r\n\t\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Expand to max size\r\n\t\t\t\t\t\tminSize.width = me.maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tme.paddingTop = tickFontSize / 2;\r\n\t\t\t\t\tme.paddingBottom = tickFontSize / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.margins) {\r\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: function() {\r\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t},\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\t\tisFullWidth: function() {\r\n\t\t\treturn (this.options.fullWidth);\r\n\t\t},\r\n\r\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\tgetRightValue: function getRightValue(rawValue) {\r\n\t\t\t// Null and undefined values first\r\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\r\n\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\tif (typeof(rawValue) === \"object\") {\r\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\treturn rawValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Value is good, return it\r\n\t\t\treturn rawValue;\r\n\t\t},\r\n\r\n\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\tgetLabelForIndex: helpers.noop,\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: helpers.noop,\r\n\r\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\tgetValueForPixel: helpers.noop,\r\n\r\n\t\t// Used for tick location, should\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\tgetPixelForDecimal: function(decimal /*, includeOffset*/ ) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\treturn me.top + (decimal * me.height);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetBasePixel: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPixelForValue(\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\t// Actualy draw the scale on the canvas\r\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tif (!options.display) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = options.ticks;\r\n\t\t\tvar gridLines = options.gridLines;\r\n\t\t\tvar scaleLabel = options.scaleLabel;\r\n\r\n\t\t\tvar isRotated = me.labelRotation !== 0;\r\n\t\t\tvar skipRatio;\r\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\tvar maxTicks;\r\n\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t}\r\n\r\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tvar tl = gridLines.tickMarkLength;\r\n\r\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\tvar sinRotation = Math.sin(labelRotationRadians);\r\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n\t\t\tvar rotatedLabelHeight = tickFontSize * sinRotation;\r\n\r\n\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\tcontext.fillStyle = tickFontColor;\r\n\r\n\t\t\tvar itemsToDraw = [];\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tskipRatio = false;\r\n\r\n                // Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\r\n                // See #2584\r\n                if (isRotated) {\r\n                    longestRotatedLabel /= 2;\r\n                }\r\n\r\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\r\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar xTickStart = options.position === \"right\" ? me.left : me.right - tl;\r\n\t\t\tvar xTickEnd = options.position === \"right\" ? me.left + tl : me.right;\r\n\t\t\tvar yTickStart = options.position === \"bottom\" ? me.top : me.bottom - tl;\r\n\t\t\tvar yTickEnd = options.position === \"bottom\" ? me.top + tl : me.bottom;\r\n\r\n\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\r\n\r\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\r\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lineWidth, lineColor;\r\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\r\n\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\r\n\t\t\t\t} else  {\r\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\r\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Common properties\r\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n\t\t\t\tvar textAlign, textBaseline = 'middle';\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tif (!isRotated) {\r\n\t\t\t\t\t\ttextBaseline = options.position === 'top' ? 'bottom' : 'top';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttextAlign = isRotated ? 'right' : 'center';\r\n\r\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\r\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\t\t\t\t\tlabelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;\r\n\r\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\r\n\t\t\t\t\tty1 = yTickStart;\r\n\t\t\t\t\tty2 = yTickEnd;\r\n\t\t\t\t\ty1 = chartArea.top;\r\n\t\t\t\t\ty2 = chartArea.bottom;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (options.position === 'left') {\r\n\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\tlabelX = me.right + optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'left';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlabelX = me.right - optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'right';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// right side\r\n\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\tlabelX = me.left - optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'right';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlabelX = me.left + optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'left';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\r\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\r\n\r\n\t\t\t\t\ttx1 = xTickStart;\r\n\t\t\t\t\ttx2 = xTickEnd;\r\n\t\t\t\t\tx1 = chartArea.left;\r\n\t\t\t\t\tx2 = chartArea.right;\r\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemsToDraw.push({\r\n\t\t\t\t\ttx1: tx1,\r\n\t\t\t\t\tty1: ty1,\r\n\t\t\t\t\ttx2: tx2,\r\n\t\t\t\t\tty2: ty2,\r\n\t\t\t\t\tx1: x1,\r\n\t\t\t\t\ty1: y1,\r\n\t\t\t\t\tx2: x2,\r\n\t\t\t\t\ty2: y2,\r\n\t\t\t\t\tlabelX: labelX,\r\n\t\t\t\t\tlabelY: labelY,\r\n\t\t\t\t\tglWidth: lineWidth,\r\n\t\t\t\t\tglColor: lineColor,\r\n\t\t\t\t\trotation: -1 * labelRotationRadians,\r\n\t\t\t\t\tlabel: label,\r\n\t\t\t\t\ttextBaseline: textBaseline,\r\n\t\t\t\t\ttextAlign: textAlign\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\r\n\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\r\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\r\n\r\n\t\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\r\n\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\r\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\r\n\r\n\t\t\t\t\tvar label = itemToDraw.label;\r\n\t\t\t\t\tif (helpers.isArray(label)) {\r\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\r\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\r\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\r\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\r\n\t\t\t\t\t\t\ty += (tickFontSize * 1.5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t// Draw the scale label\r\n\t\t\t\tvar scaleLabelX;\r\n\t\t\t\tvar scaleLabelY;\r\n\t\t\t\tvar rotation = 0;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);\r\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\tcontext.textAlign = 'center';\r\n\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\tcontext.font = scaleLabelFont;\r\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\r\n\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\r\n\t\t\t\tvar x1 = me.left,\r\n\t\t\t\t\tx2 = me.right,\r\n\t\t\t\t\ty1 = me.top,\r\n\t\t\t\t\ty2 = me.bottom;\r\n\r\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\r\n\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],31:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.scaleService = {\r\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t// use the new chart options to grab the correct scale\r\n\t\tconstructors: {},\r\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t// old browsers\r\n\r\n\t\t// Scale config defaults\r\n\t\tdefaults: {},\r\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t},\r\n\t\tgetScaleConstructor: function(type) {\r\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t},\r\n\t\tgetScaleDefaults: function(type) {\r\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t},\r\n\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\tvar defaults = this.defaults;\r\n\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t}\r\n\t\t},\r\n\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\n},{}],32:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.title = {\r\n\t\tdisplay: false,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\r\n\t\tfontStyle: 'bold',\r\n\t\tpadding: 10,\r\n\r\n\t\t// actual title\r\n\t\ttext: ''\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.Title = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.extend(me, config);\r\n\t\t\tme.options = helpers.configMerge(Chart.defaults.global.title, config.options);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tme.legendHitBoxes = [];\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\r\n\t\tbeforeUpdate: function () {\r\n\t\t\tvar chartOpts = this.chart.options;\r\n\t\t\tif (chartOpts && chartOpts.title) {\r\n\t\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, chartOpts.title);\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: noop,\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\r\n\t\t\tvar me = this,\r\n\t\t\t\tctx = me.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\tdisplay = opts.display,\r\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\tminSize = me.minSize;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\tvar pos = this.options.position;\r\n\t\t\treturn pos === \"top\" || pos === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the title block on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this,\r\n\t\t\t\tctx = me.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\trotation = 0,\r\n\t\t\t\t\ttitleX,\r\n\t\t\t\t\ttitleY,\r\n\t\t\t\t\ttop = me.top,\r\n\t\t\t\t\tleft = me.left,\r\n\t\t\t\t\tbottom = me.bottom,\r\n\t\t\t\t\tright = me.right;\r\n\r\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\tctx.font = titleFont;\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.fillText(opts.text, 0, 0);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register the title plugin\r\n\tChart.plugins.register({\r\n\t\tbeforeInit: function(chartInstance) {\r\n\t\t\tvar opts = chartInstance.options;\r\n\t\t\tvar titleOpts = opts.title;\r\n\r\n\t\t\tif (titleOpts) {\r\n\t\t\t\tchartInstance.titleBlock = new Chart.Title({\r\n\t\t\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\t\t\toptions: titleOpts,\r\n\t\t\t\t\tchart: chartInstance\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.titleBlock);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.tooltips = {\r\n\t\tenabled: true,\r\n\t\tcustom: null,\r\n\t\tmode: 'single',\r\n\t\tbackgroundColor: \"rgba(0,0,0,0.8)\",\r\n\t\ttitleFontStyle: \"bold\",\r\n\t\ttitleSpacing: 2,\r\n\t\ttitleMarginBottom: 6,\r\n\t\ttitleFontColor: \"#fff\",\r\n\t\ttitleAlign: \"left\",\r\n\t\tbodySpacing: 2,\r\n\t\tbodyFontColor: \"#fff\",\r\n\t\tbodyAlign: \"left\",\r\n\t\tfooterFontStyle: \"bold\",\r\n\t\tfooterSpacing: 2,\r\n\t\tfooterMarginTop: 6,\r\n\t\tfooterFontColor: \"#fff\",\r\n\t\tfooterAlign: \"left\",\r\n\t\tyPadding: 6,\r\n\t\txPadding: 6,\r\n\t\tyAlign : 'center',\r\n\t\txAlign : 'center',\r\n\t\tcaretSize: 5,\r\n\t\tcornerRadius: 6,\r\n\t\tmultiKeyBackground: '#fff',\r\n\t\tcallbacks: {\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\tvar title = '';\r\n\t\t\t\tvar labels = data.labels;\r\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\r\n\r\n\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\tvar item = tooltipItems[0];\r\n\r\n\t\t\t\t\tif (item.xLabel) {\r\n\t\t\t\t\t\ttitle = item.xLabel;\r\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\r\n\t\t\t\t\t\ttitle = labels[item.index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn title;\r\n\t\t\t},\r\n\t\t\tafterTitle: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t},\r\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\r\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\r\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\r\n\t\t\t\tvar view = activeElement._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tborderColor: view.borderColor,\r\n\t\t\t\t\tbackgroundColor: view.backgroundColor\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterLabel: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tafterBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\tfooter: helpers.noop,\r\n\t\t\tafterFooter: helpers.noop\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\tfunction pushOrConcat(base, toPush) {\r\n\t\tif (toPush) {\r\n\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\tbase = base.concat(toPush);\r\n\t\t\t} else {\r\n\t\t\t\tbase.push(toPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\t}\r\n\r\n\tfunction getAveragePosition(elements) {\r\n\t\tif (!elements.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar i, len;\r\n\t\tvar xPositions = [];\r\n\t\tvar yPositions = [];\r\n\r\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\tvar el = elements[i];\r\n\t\t\tif (el && el.hasValue()){\r\n\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\txPositions.push(pos.x);\r\n\t\t\t\tyPositions.push(pos.y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar x = 0,\r\n\t\t\ty = 0;\r\n\t\tfor (i = 0, len - xPositions.length; i < len; ++i) {\r\n\t\t\tx += xPositions[i];\r\n\t\t\ty += yPositions[i];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round(x / xPositions.length),\r\n\t\t\ty: Math.round(y / xPositions.length)\r\n\t\t};\r\n\t}\r\n\r\n\t// Private helper to create a tooltip iteam model\r\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n\t// @return : new tooltip item\r\n\tfunction createTooltipItem(element) {\r\n\t\tvar xScale = element._xScale;\r\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\tvar index = element._index,\r\n\t\t\tdatasetIndex = element._datasetIndex;\r\n\r\n\t\treturn {\r\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tindex: index,\r\n\t\t\tdatasetIndex: datasetIndex\r\n\t\t};\r\n\t}\r\n\r\n\tChart.Tooltip = Chart.Element.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar tooltipOpts = me._options;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\thelpers.extend(me, {\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Positioning\r\n\t\t\t\t\txPadding: tooltipOpts.xPadding,\r\n\t\t\t\t\tyPadding: tooltipOpts.yPadding,\r\n\t\t\t\t\txAlign : tooltipOpts.yAlign,\r\n\t\t\t\t\tyAlign : tooltipOpts.xAlign,\r\n\r\n\t\t\t\t\t// Body\r\n\t\t\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\r\n\t\t\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\r\n\t\t\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tbodySpacing: tooltipOpts.bodySpacing,\r\n\r\n\t\t\t\t\t// Title\r\n\t\t\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\r\n\t\t\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t_titleAlign: tooltipOpts.titleAlign,\r\n\t\t\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\r\n\t\t\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n\t\t\t\t\t// Footer\r\n\t\t\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\r\n\t\t\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t_footerAlign: tooltipOpts.footerAlign,\r\n\t\t\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\r\n\t\t\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tcaretSize: tooltipOpts.caretSize,\r\n\t\t\t\t\tcornerRadius: tooltipOpts.cornerRadius,\r\n\t\t\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Get the title\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetTitle: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\t\t\tvar callbacks = opts.callbacks;\r\n\r\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\r\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\r\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBeforeBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\t\t\tvar bodyItems = [];\r\n\r\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\tvar bodyItem = {\r\n\t\t\t\t\tbefore: [],\r\n\t\t\t\t\tlines: [],\r\n\t\t\t\t\tafter: []\r\n\t\t\t\t};\r\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n\t\t\t\tbodyItems.push(bodyItem);\r\n\t\t\t});\r\n\r\n\t\t\treturn bodyItems;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetAfterBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetFooter: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\r\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\r\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\tupdate: function(changed) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\t\t\tvar model = me._model;\r\n\t\t\tvar active = me._active;\r\n\r\n\t\t\tvar data = me._data;\r\n\t\t\tvar chartInstance = me._chartInstance;\r\n\r\n\t\t\tvar i, len;\r\n\r\n\t\t\tif (active.length) {\r\n\t\t\t\tmodel.opacity = 1;\r\n\r\n\t\t\t\tvar labelColors = [],\r\n\t\t\t\t\ttooltipPosition = getAveragePosition(active);\r\n\r\n\t\t\t\tvar tooltipItems = [];\r\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\r\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\r\n\t\t\t\tif (opts.itemSort) {\r\n\t\t\t\t\ttooltipItems = tooltipItems.sort(opts.itemSort);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is more than one item, show color items\r\n\t\t\t\tif (active.length > 1) {\r\n\t\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build the Text Lines\r\n\t\t\t\thelpers.extend(model, {\r\n\t\t\t\t\ttitle: me.getTitle(tooltipItems, data),\r\n\t\t\t\t\tbeforeBody: me.getBeforeBody(tooltipItems, data),\r\n\t\t\t\t\tbody: me.getBody(tooltipItems, data),\r\n\t\t\t\t\tafterBody: me.getAfterBody(tooltipItems, data),\r\n\t\t\t\t\tfooter: me.getFooter(tooltipItems, data),\r\n\t\t\t\t\tx: Math.round(tooltipPosition.x),\r\n\t\t\t\t\ty: Math.round(tooltipPosition.y),\r\n\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\r\n\t\t\t\t\tlabelColors: labelColors\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// We need to determine alignment of\r\n\t\t\t\tvar tooltipSize = me.getTooltipSize(model);\r\n\t\t\t\tme.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\r\n\r\n\t\t\t\thelpers.extend(model, me.getBackgroundPoint(model, tooltipSize));\r\n\t\t\t} else {\r\n\t\t\t\tme._model.opacity = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed && opts.custom) {\r\n\t\t\t\topts.custom.call(me, model);\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\t\tgetTooltipSize: function getTooltipSize(vm) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tvar size = {\r\n\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\r\n\t\t\t\twidth: 0\r\n\t\t\t};\r\n\r\n\t\t\t// Count of all lines in the body\r\n\t\t\tvar body = vm.body;\r\n\t\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n\t\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n\t\t\t}, 0);\r\n\t\t\tcombinedBodyLength += vm.beforeBody.length + vm.afterBody.length;\r\n\r\n\t\t\tvar titleLineCount = vm.title.length;\r\n\t\t\tvar footerLineCount = vm.footer.length;\r\n\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\tbodyFontSize = vm.bodyFontSize,\r\n\t\t\t\tfooterFontSize = vm.footerFontSize;\r\n\r\n\t\t\tsize.height += titleLineCount * titleFontSize; // Title Lines\r\n\t\t\tsize.height += (titleLineCount - 1) * vm.titleSpacing; // Title Line Spacing\r\n\t\t\tsize.height += titleLineCount ? vm.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\t\tsize.height += combinedBodyLength * bodyFontSize; // Body Lines\r\n\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\r\n\t\t\tsize.height += footerLineCount ? vm.footerMarginTop : 0; // Footer Margin\r\n\t\t\tsize.height += footerLineCount * (footerFontSize); // Footer Lines\r\n\t\t\tsize.height += footerLineCount ? (footerLineCount - 1) * vm.footerSpacing : 0; // Footer Line Spacing\r\n\r\n\t\t\t// Title width\r\n\t\t\tvar widthPadding = 0;\r\n\t\t\tvar maxLineWidth = function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + widthPadding);\r\n\t\t\t};\r\n\r\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\t\thelpers.each(vm.title, maxLineWidth);\r\n\r\n\t\t\t// Body width\r\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), maxLineWidth);\r\n\r\n\t\t\t// Body lines may include some extra width due to the color box\r\n\t\t\twidthPadding = body.length > 1 ? (bodyFontSize + 2) : 0;\r\n\t\t\thelpers.each(body, function(bodyItem) {\r\n\t\t\t\thelpers.each(bodyItem.before, maxLineWidth);\r\n\t\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\r\n\t\t\t\thelpers.each(bodyItem.after, maxLineWidth);\r\n\t\t\t});\r\n\r\n\t\t\t// Reset back to 0\r\n\t\t\twidthPadding = 0;\r\n\r\n\t\t\t// Footer width\r\n\t\t\tctx.font = helpers.fontString(footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\t\thelpers.each(vm.footer, maxLineWidth);\r\n\r\n\t\t\t// Add padding\r\n\t\t\tsize.width += 2 * vm.xPadding;\r\n\r\n\t\t\treturn size;\r\n\t\t},\r\n\t\tdetermineAlignment: function determineAlignment(size) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar model = me._model;\r\n\t\t\tvar chart = me._chart;\r\n\t\t\tvar chartArea = me._chartInstance.chartArea;\r\n\r\n\t\t\tif (model.y < size.height) {\r\n\t\t\t\tmodel.yAlign = 'top';\r\n\t\t\t} else if (model.y > (chart.height - size.height)) {\r\n\t\t\t\tmodel.yAlign = 'bottom';\r\n\t\t\t}\r\n\r\n\t\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\t\tvar midX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\t\tif (model.yAlign === 'center') {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= midX;\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x > midX;\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x >= (chart.width - (size.width / 2));\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tolf = function(x) {\r\n\t\t\t\treturn x + size.width > chart.width;\r\n\t\t\t};\r\n\t\t\torf = function(x) {\r\n\t\t\t\treturn x - size.width < 0;\r\n\t\t\t};\r\n\t\t\tyf = function(y) {\r\n\t\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t\t};\r\n\r\n\t\t\tif (lf(model.x)) {\r\n\t\t\t\tmodel.xAlign = 'left';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\t\tif (olf(model.x)) {\r\n\t\t\t\t\tmodel.xAlign = 'center';\r\n\t\t\t\t\tmodel.yAlign = yf(model.y);\r\n\t\t\t\t}\r\n\t\t\t} else if (rf(model.x)) {\r\n\t\t\t\tmodel.xAlign = 'right';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\t\tif (orf(model.x)) {\r\n\t\t\t\t\tmodel.xAlign = 'center';\r\n\t\t\t\t\tmodel.yAlign = yf(model.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetBackgroundPoint: function getBackgroundPoint(vm, size) {\r\n\t\t\t// Background Position\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\tvar caretSize = vm.caretSize,\r\n\t\t\t\tcaretPadding = vm.caretPadding,\r\n\t\t\t\tcornerRadius = vm.cornerRadius,\r\n\t\t\t\txAlign = vm.xAlign,\r\n\t\t\t\tyAlign = vm.yAlign,\r\n\t\t\t\tpaddingAndSize = caretSize + caretPadding,\r\n\t\t\t\tradiusAndPadding = cornerRadius + caretPadding;\r\n\r\n\t\t\tif (xAlign === 'right') {\r\n\t\t\t\tpt.x -= size.width;\r\n\t\t\t} else if (xAlign === 'center') {\r\n\t\t\t\tpt.x -= (size.width / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (yAlign === 'top') {\r\n\t\t\t\tpt.y += paddingAndSize;\r\n\t\t\t} else if (yAlign === 'bottom') {\r\n\t\t\t\tpt.y -= size.height + paddingAndSize;\r\n\t\t\t} else {\r\n\t\t\t\tpt.y -= (size.height / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (yAlign === 'center') {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tpt.x += paddingAndSize;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tpt.x -= paddingAndSize;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tpt.x -= radiusAndPadding;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tpt.x += radiusAndPadding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pt;\r\n\t\t},\r\n\t\tdrawCaret: function drawCaret(tooltipPoint, size, opacity, caretPadding) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar x1, x2, x3;\r\n\t\t\tvar y1, y2, y3;\r\n\t\t\tvar caretSize = vm.caretSize;\r\n\t\t\tvar cornerRadius = vm.cornerRadius;\r\n\t\t\tvar xAlign = vm.xAlign,\r\n\t\t\t\tyAlign = vm.yAlign;\r\n\t\t\tvar ptX = tooltipPoint.x,\r\n\t\t\t\tptY = tooltipPoint.y;\r\n\t\t\tvar width = size.width,\r\n\t\t\t\theight = size.height;\r\n\r\n\t\t\tif (yAlign === 'center') {\r\n\t\t\t\t// Left or right side\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = ptX + width;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ty2 = ptY + (height / 2);\r\n\t\t\t\ty1 = y2 - caretSize;\r\n\t\t\t\ty3 = y2 + caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX + cornerRadius;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x2 - caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx2 = ptX + (width / 2);\r\n\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAlign === 'top') {\r\n\t\t\t\t\ty1 = ptY;\r\n\t\t\t\t\ty2 = y1 - caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty1 = ptY + height;\r\n\t\t\t\t\ty2 = y1 + caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x1, y1);\r\n\t\t\tctx.lineTo(x2, y2);\r\n\t\t\tctx.lineTo(x3, y3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t},\r\n\t\tdrawTitle: function drawTitle(pt, vm, ctx, opacity) {\r\n\t\t\tvar title = vm.title;\r\n\r\n\t\t\tif (title.length) {\r\n\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\r\n\r\n\t\t\t\tvar titleFontColor = helpers.color(vm.titleFontColor);\r\n\t\t\t\tctx.fillStyle = titleFontColor.alpha(opacity * titleFontColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n\t\t\t\tvar i, len;\r\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\r\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\r\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n\t\t\t\t\tif (i + 1 === title.length) {\r\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBody: function drawBody(pt, vm, ctx, opacity) {\r\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\r\n\t\t\tvar bodySpacing = vm.bodySpacing;\r\n\t\t\tvar body = vm.body;\r\n\r\n\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\tvar bodyFontColor = helpers.color(vm.bodyFontColor);\r\n\t\t\tvar textColor = bodyFontColor.alpha(opacity * bodyFontColor.alpha()).rgbString();\r\n\t\t\tctx.fillStyle = textColor;\r\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n\t\t\t// Before Body\r\n\t\t\tvar xLinePadding = 0;\r\n\t\t\tvar fillLineOfText = function(line) {\r\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\r\n\t\t\t};\r\n\r\n\t\t\t// Before body lines\r\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n\t\t\tvar drawColorBoxes = body.length > 1;\r\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n\t\t\t// Draw body lines now\r\n\t\t\thelpers.each(body, function(bodyItem, i) {\r\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\r\n\r\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\r\n\t\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\t\tif (drawColorBoxes) {\r\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Border\r\n\t\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Inner square\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n\r\n\t\t\t\t\t\tctx.fillStyle = textColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillLineOfText(line);\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\r\n\t\t\t});\r\n\r\n\t\t\t// Reset back to 0 for after body\r\n\t\t\txLinePadding = 0;\r\n\r\n\t\t\t// After body lines\r\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\r\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\r\n\t\t},\r\n\t\tdrawFooter: function drawFooter(pt, vm, ctx, opacity) {\r\n\t\t\tvar footer = vm.footer;\r\n\r\n\t\t\tif (footer.length) {\r\n\t\t\t\tpt.y += vm.footerMarginTop;\r\n\r\n\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar footerFontColor = helpers.color(vm.footerFontColor);\r\n\t\t\t\tctx.fillStyle = footerFontColor.alpha(opacity * footerFontColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n\t\t\t\thelpers.each(footer, function(line) {\r\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdraw: function draw() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar tooltipSize = this.getTooltipSize(vm);\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n\t\t\tif (this._options.enabled) {\r\n\t\t\t\t// Draw Background\r\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\t\tctx.fill();\r\n\r\n\t\t\t\t// Draw Caret\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity, vm.caretPadding);\r\n\r\n\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\tpt.y += vm.yPadding;\r\n\r\n\t\t\t\t// Titles\r\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Body\r\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Footer\r\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart, moment) {\r\n\r\n  var helpers = Chart.helpers,\r\n    globalOpts = Chart.defaults.global;\r\n\r\n  globalOpts.elements.arc = {\r\n    backgroundColor: globalOpts.defaultColor,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 2\r\n  };\r\n\r\n  Chart.elements.Arc = Chart.Element.extend({\r\n    inLabelRange: function(mouseX) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    inRange: function(chartX, chartY) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n            x: chartX,\r\n            y: chartY\r\n          }),\r\n          angle = pointRelativePosition.angle,\r\n          distance = pointRelativePosition.distance;\r\n\r\n        //Sanitise angle range\r\n        var startAngle = vm.startAngle;\r\n        var endAngle = vm.endAngle;\r\n        while (endAngle < startAngle) {\r\n          endAngle += 2.0 * Math.PI;\r\n        }\r\n        while (angle > endAngle) {\r\n          angle -= 2.0 * Math.PI;\r\n        }\r\n        while (angle < startAngle) {\r\n          angle += 2.0 * Math.PI;\r\n        }\r\n\r\n        //Check if within the range of the open/close angle\r\n        var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n          withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n        return (betweenAngles && withinRadius);\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    tooltipPosition: function() {\r\n      var vm = this._view;\r\n\r\n      var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n        rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n      return {\r\n        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n      };\r\n    },\r\n    draw: function() {\r\n\r\n      var ctx = this._chart.ctx,\r\n        vm = this._view,\r\n        sA = vm.startAngle,\r\n        eA = vm.endAngle;\r\n\r\n      ctx.beginPath();\r\n\r\n      ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n      ctx.closePath();\r\n      ctx.strokeStyle = vm.borderColor;\r\n      ctx.lineWidth = vm.borderWidth;\r\n\r\n      ctx.fillStyle = vm.backgroundColor;\r\n\r\n      ctx.fill();\r\n      ctx.lineJoin = 'bevel';\r\n\r\n      if (vm.borderWidth) {\r\n        ctx.stroke();\r\n      }\r\n    }\r\n  });\r\n};\r\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tChart.defaults.global.elements.line = {\r\n\t\ttension: 0.4,\r\n\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\tborderWidth: 3,\r\n\t\tborderColor: globalDefaults.defaultColor,\r\n\t\tborderCapStyle: 'butt',\r\n\t\tborderDash: [],\r\n\t\tborderDashOffset: 0.0,\r\n\t\tborderJoinStyle: 'miter',\r\n\t\tfill: true // do we fill in the area between the line and its base axis\r\n\t};\r\n\r\n\tChart.elements.Line = Chart.Element.extend({\r\n\t\tlineToNextPoint: function(previousPoint, point, nextPoint, skipHandler, previousSkipHandler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\tvar spanGaps = me._view ? me._view.spanGaps : false;\r\n\r\n\t\t\tif (point._view.skip && !spanGaps) {\r\n\t\t\t\tskipHandler.call(me, previousPoint, point, nextPoint);\r\n\t\t\t} else if (previousPoint._view.skip && !spanGaps) {\r\n\t\t\t\tpreviousSkipHandler.call(me, previousPoint, point, nextPoint);\r\n\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t} else {\r\n\t\t\t\t// Line between points\r\n\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\tpoint._view.controlPointPreviousX,\r\n\t\t\t\t\tpoint._view.controlPointPreviousY,\r\n\t\t\t\t\tpoint._view.x,\r\n\t\t\t\t\tpoint._view.y\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tvar vm = me._view;\r\n\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\tvar first = me._children[0];\r\n\t\t\tvar last = me._children[me._children.length - 1];\r\n\r\n\t\t\tfunction loopBackToStart(drawLineToCenter) {\r\n\t\t\t\tif (!first._view.skip && !last._view.skip) {\r\n\t\t\t\t\t// Draw a bezier line from last to first\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tlast._view.controlPointNextX,\r\n\t\t\t\t\t\tlast._view.controlPointNextY,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousX,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousY,\r\n\t\t\t\t\t\tfirst._view.x,\r\n\t\t\t\t\t\tfirst._view.y\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (drawLineToCenter) {\r\n\t\t\t\t\t// Go to center\r\n\t\t\t\t\tctx.lineTo(me._view.scaleZero.x, me._view.scaleZero.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// If we had points and want to fill this line, do so.\r\n\t\t\tif (me._children.length > 0 && vm.fill) {\r\n\t\t\t\t// Draw the background first (so the border is always on top)\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\thelpers.each(me._children, function(point, index) {\r\n\t\t\t\t\tvar previous = helpers.previousItem(me._children, index);\r\n\t\t\t\t\tvar next = helpers.nextItem(me._children, index);\r\n\r\n\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\t\tctx.moveTo(vm.scaleZero.x, vm.scaleZero.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.moveTo(point._view.x, vm.scaleZero);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\t\t\tif (!me._loop) {\r\n\t\t\t\t\t\t\t\tctx.moveTo(next._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\t\t\tctx.lineTo(me._view.scaleZero.x, me._view.scaleZero.y);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.lineTo(previousPoint._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t// If we skipped the last point, draw a line to ourselves so that the fill is nice\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\r\n\t\t\t\t// For radial scales, loop back around to the first point\r\n\t\t\t\tif (me._loop) {\r\n\t\t\t\t\tloopBackToStart(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\r\n\t\t\t\t\tctx.lineTo(me._children[me._children.length - 1]._view.x, vm.scaleZero);\r\n\t\t\t\t\tctx.lineTo(me._children[0]._view.x, vm.scaleZero);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\t// Now draw the line between all the points with any borders\r\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t}\r\n\r\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\thelpers.each(me._children, function(point, index) {\r\n\t\t\t\tvar previous = helpers.previousItem(me._children, index);\r\n\t\t\t\tvar next = helpers.nextItem(me._children, index);\r\n\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, nextPoint._view.y);\r\n\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t// If we skipped the last point, move up to our point preventing a line from being drawn\r\n\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (me._loop && me._children.length > 0) {\r\n\t\t\t\tloopBackToStart();\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t});\r\n};\n},{}],36:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global,\r\n\t\tdefaultColor = globalOpts.defaultColor;\r\n\r\n\tglobalOpts.elements.point = {\r\n\t\tradius: 3,\r\n\t\tpointStyle: 'circle',\r\n\t\tbackgroundColor: defaultColor,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: defaultColor,\r\n\t\t// Hover\r\n\t\thitRadius: 1,\r\n\t\thoverRadius: 4,\r\n\t\thoverBorderWidth: 1\r\n\t};\r\n\r\n\tChart.elements.Point = Chart.Element.extend({\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y,\r\n\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\tvar radius = vm.radius;\r\n\t\t\tvar x = vm.x;\r\n\t\t\tvar y = vm.y;\r\n\t\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n\t\t\tif (vm.skip) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof pointStyle === 'object') {\r\n\t\t\t\ttype = pointStyle.toString();\r\n\t\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n\t\t\tswitch (pointStyle) {\r\n\t\t\t// Default includes circle\r\n\t\t\tdefault:\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triangle':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rect':\r\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\tctx.fillRect(x - size, y - size, 2 * size,  2 * size);\r\n\t\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rectRot':\r\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x - size, y);\r\n\t\t\t\tctx.lineTo(x, y + size);\r\n\t\t\t\tctx.lineTo(x + size, y);\r\n\t\t\t\tctx.lineTo(x, y - size);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'cross':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'crossRot':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'star':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'line':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dash':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.rectangle = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom'\r\n\t};\r\n\r\n\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tvar halfWidth = vm.width / 2,\r\n\t\t\t\tleftX = vm.x - halfWidth,\r\n\t\t\t\trightX = vm.x + halfWidth,\r\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\r\n\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tleftX += halfStroke;\r\n\t\t\t\trightX -= halfStroke;\r\n\t\t\t\ttop += halfStroke;\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t// | 1 2 |\r\n\t\t\t// | 0 3 |\r\n\t\t\tvar corners = [\r\n\t\t\t\t[leftX, vm.base],\r\n\t\t\t\t[leftX, top],\r\n\t\t\t\t[rightX, top],\r\n\t\t\t\t[rightX, vm.base]\r\n\t\t\t];\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom' \r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\tif (startCorner === -1)\r\n\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? \r\n\t\t\t\t\t(vm.y < vm.base ? \r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\r\n\t\t\t\t\tfalse;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n};\n},{}],38:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t// Default config for a category scale\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\"\r\n\t};\r\n\r\n\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t// Implement this so that \r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.minIndex = 0;\r\n\t\t\tme.maxIndex = me.chart.data.labels.length - 1;\r\n\t\t\tvar findIndex;\r\n\r\n\t\t\tif (me.options.ticks.min !== undefined) {\r\n\t\t\t\t// user specified min value\r\n\t\t\t\tfindIndex = helpers.indexOf(me.chart.data.labels, me.options.ticks.min);\r\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.ticks.max !== undefined) {\r\n\t\t\t\t// user specified max value\r\n\t\t\t\tfindIndex = helpers.indexOf(me.chart.data.labels, me.options.ticks.max);\r\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n\t\t\t}\r\n\r\n\t\t\tme.min = me.chart.data.labels[me.minIndex];\r\n\t\t\tme.max = me.chart.data.labels[me.maxIndex];\r\n\t\t},\r\n\r\n\t\tbuildTicks: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === me.chart.data.labels.length - 1) ? me.chart.data.labels : me.chart.data.labels.slice(me.minIndex, me.maxIndex + 1);\r\n\t\t},\r\n\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn this.ticks[index];\r\n\t\t},\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\r\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex)) + me.paddingLeft;\r\n\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn me.left + Math.round(widthOffset);\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\tvar valueHeight = innerHeight / offsetAmt;\r\n\t\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex)) + me.paddingTop;\r\n\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar value;\r\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\tvar horz = me.isHorizontal();\r\n\t\t\tvar innerDimension = horz ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\tvar valueDimension = innerDimension / offsetAmt;\r\n\r\n\t\t\tif (me.options.gridLines.offsetGridLines) {\r\n\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t}\r\n\t\t\tpixel -= horz ? me.paddingLeft : me.paddingTop;\r\n\r\n\t\t\tif (pixel <= 0) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\r\n\tChart.scaleService.registerScaleType(\"category\", DatasetScale, defaultConfig);\r\n\r\n};\n},{}],39:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\t\tticks: {\r\n\t\t\tcallback: function(tickValue, index, ticks) {\r\n\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\tvar tickString = '';\r\n\r\n\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tickString;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearScale = Chart.LinearScaleBase.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// First Calculate the range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\t\t\tif (opts.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\t\t\t\tvar hasPositiveValues = false;\r\n\t\t\t\tvar hasNegativeValues = false;\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\r\n\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store these per type\r\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\r\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\t\t\t\thasNegativeValues = true;\r\n\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\thasPositiveValues = true;\r\n\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tthis.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar maxTicks;\r\n\t\t\tvar me = this;\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n\t\t\t} else {\r\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n\t\t\t}\r\n\r\n\t\t\treturn maxTicks;\r\n\t\t},\r\n\t\t// Called after the ticks are built. We need \r\n\t\thandleDirectionalChanges: function() {\r\n\t\t\tif (!this.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tthis.ticks.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\t// Utils\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t// This must be called after fit has been run so that\r\n\t\t\t//      this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\tvar me = this;\r\n\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\tvar start = me.start;\r\n\r\n\t\t\tvar rightValue = +me.getRightValue(value);\r\n\t\t\tvar pixel;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar range = me.end - start;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\r\n\t\t\t\tpixel = me.left + (innerDimension / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel + paddingLeft);\r\n\t\t\t} else {\r\n\t\t\t\tinnerDimension = me.height - (me.paddingTop + paddingBottom);\r\n\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\tvar innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);\r\n\t\t\tvar offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;\r\n\t\t\treturn me.start + ((me.end - me.start) * offset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index], null, null, includeOffset);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"linear\", LinearScale, defaultConfig);\r\n\r\n};\n},{}],40:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tnoop = helpers.noop;\r\n\r\n\tChart.LinearScaleBase = Chart.Scale.extend({\r\n\t\thandleTickRangeOptions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(me.min);\r\n\t\t\t\tvar maxSign = helpers.sign(me.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tme.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\tme.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\tme.min = tickOpts.min;\r\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\tme.max = tickOpts.max;\r\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tme.max++;\r\n\r\n\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\tme.min--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetTickLimit: noop,\r\n\t\thandleDirectionalChanges: noop,\r\n\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tvar ticks = me.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar maxTicks = me.getTickLimit();\r\n\r\n\t\t\t// Make sure we always have at least 2 ticks\r\n\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\r\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t// for details.\r\n\r\n\t\t\tvar spacing;\r\n\t\t\tvar fixedStepSizeSet = (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) || (tickOpts.stepSize && tickOpts.stepSize > 0);\r\n\t\t\tif (fixedStepSizeSet) {\r\n\t\t\t\tspacing = getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize);\r\n\t\t\t} else {\r\n\t\t\t\tvar niceRange = helpers.niceNum(me.max - me.min, false);\r\n\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t}\r\n\t\t\tvar niceMin = Math.floor(me.min / spacing) * spacing;\r\n\t\t\tvar niceMax = Math.ceil(me.max / spacing) * spacing;\r\n\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\r\n\t\t\t// If very close to our rounded value, use it.\r\n\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t} else {\r\n\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t}\r\n\r\n\t\t\t// Put the values into the ticks array\r\n\t\t\tticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);\r\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t}\r\n\t\t\tticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);\r\n\r\n\t\t\tme.handleDirectionalChanges();\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\r\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\r\n\t\t},\r\n\t});\r\n};\n},{}],41:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tcallback: function(value, index, arr) {\r\n\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(helpers.log10(value))));\r\n\r\n\t\t\t\tif (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\r\n\t\t\t\t\treturn value.toExponential();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate Range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\t\t\tif (opts.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\r\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\r\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\r\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.min = 1;\r\n\t\t\t\t\tme.max = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\r\n\t\t\t// The array simply contains the numerical value of the spots where ticks will be\r\n\t\t\tvar ticks = me.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar tickVal = getValueOrDefault(tickOpts.min, Math.pow(10, Math.floor(helpers.log10(me.min))));\r\n\r\n\t\t\twhile (tickVal < me.max) {\r\n\t\t\t\tticks.push(tickVal);\r\n\r\n\t\t\t\tvar exp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\tvar significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\r\n\r\n\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t++exp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t}\r\n\r\n\t\t\tvar lastTick = getValueOrDefault(tickOpts.max, tickVal);\r\n\t\t\tticks.push(lastTick);\r\n\r\n\t\t\tif (!me.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickValues = this.ticks.slice();\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Get the correct tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickValues[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar pixel;\r\n\r\n\t\t\tvar start = me.start;\r\n\t\t\tvar newVal = +me.getRightValue(value);\r\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(start);\r\n\t\t\tvar paddingTop = me.paddingTop;\r\n\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\tvar paddingLeft = me.paddingLeft;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = me.left + paddingLeft;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\r\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\tpixel += paddingLeft;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Bottom - top since pixels increase downard on a screen\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = me.top + paddingTop;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\r\n\t\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pixel;\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar offset;\r\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\r\n\t\t\tvar value;\r\n\t\t\tvar innerDimension;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tinnerDimension = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left - me.paddingLeft) * range / innerDimension);\r\n\t\t\t} else {\r\n\t\t\t\tinnerDimension = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\tvalue = Math.pow(10, (me.bottom - me.paddingBottom - pixel) * range / innerDimension) / me.start;\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"logarithmic\", LogarithmicScale, defaultConfig);\r\n\r\n};\n},{}],42:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tvar defaultConfig = {\r\n\t\tdisplay: true,\r\n\r\n\t\t//Boolean - Whether to animate scaling the chart from the centre\r\n\t\tanimate: true,\r\n\t\tlineArc: false,\r\n\t\tposition: \"chartArea\",\r\n\r\n\t\tangleLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\t//Boolean - Show a backdrop to the scale label\r\n\t\t\tshowLabelBackdrop: true,\r\n\r\n\t\t\t//String - The colour of the label backdrop\r\n\t\t\tbackdropColor: \"rgba(255,255,255,0.75)\",\r\n\r\n\t\t\t//Number - The backdrop padding above & below the label in pixels\r\n\t\t\tbackdropPaddingY: 2,\r\n\r\n\t\t\t//Number - The backdrop padding to the side of the label in pixels\r\n\t\t\tbackdropPaddingX: 2\r\n\t\t},\r\n\r\n\t\tpointLabels: {\r\n\t\t\t//Number - Point label font size in pixels\r\n\t\t\tfontSize: 10,\r\n\r\n\t\t\t//Function - Used to convert point labels\r\n\t\t\tcallback: function(label) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\r\n\t\tgetValueCount: function() {\r\n\t\t\treturn this.chart.data.labels.length;\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tme.width = me.maxWidth;\r\n\t\t\tme.height = me.maxHeight;\r\n\t\t\tme.xCenter = Math.round(me.width / 2);\r\n\t\t\tme.yCenter = Math.round(me.height / 2);\r\n\r\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\r\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tme.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\r\n\r\n\t\t\t// Point labels\r\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\t/*\r\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t\t *\r\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t\t *\r\n\t\t\t * Solution:\r\n\t\t\t *\r\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t\t * at each index we check if the text overlaps.\r\n\t\t\t *\r\n\t\t\t * Where it does, we store that angle and that index.\r\n\t\t\t *\r\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t\t *\r\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t\t * along with labels.\r\n\t\t\t *\r\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t\t *\r\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t\t * and position it in the most space efficient manner\r\n\t\t\t *\r\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t\t */\r\n\r\n\t\t\tvar pointLabels = this.options.pointLabels;\r\n\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\r\n\t\t\t\tpointPosition,\r\n\t\t\t\ti,\r\n\t\t\t\ttextWidth,\r\n\t\t\t\thalfTextWidth,\r\n\t\t\t\tfurthestRight = this.width,\r\n\t\t\t\tfurthestRightIndex,\r\n\t\t\t\tfurthestRightAngle,\r\n\t\t\t\tfurthestLeft = 0,\r\n\t\t\t\tfurthestLeftIndex,\r\n\t\t\t\tfurthestLeftAngle,\r\n\t\t\t\txProtrusionLeft,\r\n\t\t\t\txProtrusionRight,\r\n\t\t\t\tradiusReductionRight,\r\n\t\t\t\tradiusReductionLeft,\r\n\t\t\t\tmaxWidthRadius;\r\n\t\t\tthis.ctx.font = pointLabeFont;\r\n\r\n\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\r\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\r\n\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\r\n\t\t\t\tif (i === 0 || i === this.getValueCount() / 2) {\r\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\r\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\r\n\t\t\t\t\t// w/left and right text sizes\r\n\t\t\t\t\thalfTextWidth = textWidth / 2;\r\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i < this.getValueCount() / 2) {\r\n\t\t\t\t\t// Less than half the values means we'll left align the text\r\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i > this.getValueCount() / 2) {\r\n\t\t\t\t\t// More than half the values means we'll right align the text\r\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\txProtrusionLeft = furthestLeft;\r\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\r\n\r\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\r\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\r\n\r\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\r\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\r\n\r\n\t\t\t// Ensure we actually need to reduce the size of the chart\r\n\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\r\n\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\r\n\r\n\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\r\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\r\n\t\t},\r\n\t\tsetCenterPoint: function(leftMovement, rightMovement) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\r\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea;\r\n\r\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\r\n\t\t\t// Always vertically in the centre as the text height doesn't change\r\n\t\t\tme.yCenter = Math.round((me.height / 2) + me.top);\r\n\t\t},\r\n\r\n\t\tgetIndexAngle: function(index) {\r\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\r\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\r\n\t\t\treturn index * angleMultiplier - (Math.PI / 2);\r\n\t\t},\r\n\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (value === null) {\r\n\t\t\t\treturn 0; // null always in center\r\n\t\t\t}\r\n\r\n\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\r\n\t\t\tif (me.options.reverse) {\r\n\t\t\t\treturn (me.max - value) * scalingFactor;\r\n\t\t\t} else {\r\n\t\t\t\treturn (value - me.min) * scalingFactor;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar thisAngle = me.getIndexAngle(index);\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\r\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t},\r\n\r\n\t\tgetBasePosition: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar angleLineOpts = opts.angleLines;\r\n\t\t\tvar pointLabelOpts = opts.pointLabels;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\t\t// Tick Font\r\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\tif (index > 0 || opts.reverse) {\r\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\r\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\r\n\r\n\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\r\n\t\t\t\t\t\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\r\n\t\t\t\t\t\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\r\n\r\n\t\t\t\t\t\t\tif (opts.lineArc) {\r\n\t\t\t\t\t\t\t\t// Draw circular arcs between the points\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.arc(me.xCenter, me.yCenter, yCenterOffset, 0, Math.PI * 2);\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < me.getValueCount(); i++) {\r\n\t\t\t\t\t\t\t\t\tvar pointPosition = me.getPointPosition(i, yCenterOffset);\r\n\t\t\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (tickOpts.display) {\r\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!opts.lineArc) {\r\n\t\t\t\t\tctx.lineWidth = angleLineOpts.lineWidth;\r\n\t\t\t\t\tctx.strokeStyle = angleLineOpts.color;\r\n\r\n\t\t\t\t\tvar outerDistance = me.getDistanceFromCenterForValue(opts.reverse ? me.min : me.max);\r\n\r\n\t\t\t\t\t// Point Label Font\r\n\t\t\t\t\tvar pointLabelFontSize = getValueOrDefault(pointLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\tvar pointLabeFontStyle = getValueOrDefault(pointLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\tvar pointLabeFontFamily = getValueOrDefault(pointLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t\t\tfor (var i = me.getValueCount() - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tif (angleLineOpts.display) {\r\n\t\t\t\t\t\t\tvar outerPosition = me.getPointPosition(i, outerDistance);\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.moveTo(me.xCenter, me.yCenter);\r\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\t\t\tvar pointLabelPosition = me.getPointPosition(i, outerDistance + 5);\r\n\r\n\t\t\t\t\t\t// Keep this in loop since we may support array properties here\r\n\t\t\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\tctx.font = pointLabeFont;\r\n\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\r\n\t\t\t\t\t\tvar pointLabels = me.pointLabels,\r\n\t\t\t\t\t\t\tlabelsCount = pointLabels.length,\r\n\t\t\t\t\t\t\thalfLabelsCount = pointLabels.length / 2,\r\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount / 2,\r\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\r\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i === halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i < halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\r\n\t\t\t\t\t\tif (exactQuarter) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t} else if (upperHalf) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tctx.fillText(pointLabels[i] ? pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"radialLinear\", LinearRadialScale, defaultConfig);\r\n\r\n};\r\n\n},{}],43:[function(require,module,exports){\n/*global window: false */\r\n\"use strict\";\r\n\r\nvar moment = require(1);\r\nmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar time = {\r\n\t\tunits: [{\r\n\t\t\tname: 'millisecond',\r\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t}, {\r\n\t\t\tname: 'second',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'minute',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'hour',\r\n\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t}, {\r\n\t\t\tname: 'day',\r\n\t\t\tsteps: [1, 2, 5]\r\n\t\t}, {\r\n\t\t\tname: 'week',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'month',\r\n\t\t\tmaxStep: 3\r\n\t\t}, {\r\n\t\t\tname: 'quarter',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'year',\r\n\t\t\tmaxStep: false\r\n\t\t}]\r\n\t};\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\",\r\n\r\n\t\ttime: {\r\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\r\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\tdisplayFormats: {\r\n\t\t\t\t'millisecond': 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\t'second': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'minute': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'hour': 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\t'day': 'll', // Sep 4 2015\r\n\t\t\t\t'week': 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\t'month': 'MMM YYYY', // Sept 2015\r\n\t\t\t\t'quarter': '[Q]Q - YYYY', // Q3\r\n\t\t\t\t'year': 'YYYY' // 2015\r\n\t\t\t}\r\n\t\t},\r\n\t\tticks: {\r\n\t\t\tautoSkip: false\r\n\t\t}\r\n\t};\r\n\r\n\tvar TimeScale = Chart.Scale.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tif (!moment) {\r\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t}\r\n\r\n\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t},\r\n\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t},\r\n\t\tgetMomentStartOf: function(tick) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\r\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\r\n\t\t\t} else {\r\n\t\t\t\treturn tick.clone().startOf(me.tickUnit);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.labelMoments = [];\r\n\r\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t// these\r\n\t\t\tvar scaleLabelMoments = [];\r\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\r\n\t\t\t\thelpers.each(me.chart.data.labels, function(label, index) {\r\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\r\n\r\n\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\r\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\r\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\r\n\t\t\t} else {\r\n\t\t\t\tme.firstTick = null;\r\n\t\t\t\tme.lastTick = null;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\thelpers.each(dataset.data, function(value, index) {\r\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\r\n\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, me);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.labelMoments.push(momentsForDataset);\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Set these after we've done all the data\r\n\t\t\tif (me.options.time.min) {\r\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.time.max) {\r\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\r\n\t\t\t}\r\n\r\n\t\t\t// We will modify these, so clone for later\r\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\r\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\r\n\t\t},\r\n\t\tbuildTicks: function(index) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tme.ctx.save();\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tme.ctx.font = tickLabelFont;\r\n\r\n\t\t\tme.ticks = [];\r\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\r\n\t\t\t// Set unit override if applicable\r\n\t\t\tif (me.options.time.unit) {\r\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\r\n\t\t\t} else {\r\n\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\r\n\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\r\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\r\n\t\t\t\t// Start as small as possible\r\n\t\t\t\tme.tickUnit = 'millisecond';\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\r\n\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\tme.unitScale = 1;\r\n\r\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t// Use one of the prefedined steps\r\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\r\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\r\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar roundedStart;\r\n\r\n\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\tif (!me.options.time.min) {\r\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\r\n\t\t\t\troundedStart = me.firstTick;\r\n\t\t\t} else {\r\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\tif (!me.options.time.max) {\r\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\r\n\t\t\t\tif (roundedEnd.diff(me.lastTick, me.tickUnit, true) !== 0) {\r\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\r\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.smallestLabelSeparation = me.width;\r\n\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tfor (var i = 1; i < me.labelMoments[datasetIndex].length; i++) {\r\n\t\t\t\t\tme.smallestLabelSeparation = Math.min(me.smallestLabelSeparation, me.labelMoments[datasetIndex][i].diff(me.labelMoments[datasetIndex][i - 1], me.tickUnit, true));\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Tick displayFormat override\r\n\t\t\tif (me.options.time.displayFormat) {\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\r\n\t\t\t}\r\n\r\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\tme.ticks.push(me.firstTick.clone());\r\n\r\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\tfor (var i = 1; i <= me.scaleSizeInUnits; ++i) {\r\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\r\n\r\n\t\t\t\t// Are we greater than the max time\r\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i % me.unitScale === 0) {\r\n\t\t\t\t\tme.ticks.push(newTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Always show the right tick\r\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\r\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\r\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\tif (me.options.time.max) {\r\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.ctx.restore();\r\n\t\t},\r\n\t\t// Get tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\r\n\r\n\t\t\tif (typeof me.chart.data.datasets[datasetIndex].data[0] === 'object') {\r\n\t\t\t\tlabel = me.getRightValue(me.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t}\r\n\r\n\t\t\t// Format nicely\r\n\t\t\tif (me.options.time.tooltipFormat) {\r\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\r\n\t\t\t}\r\n\r\n\t\t\treturn label;\r\n\t\t},\r\n\t\t// Function to format an individual tick mark\r\n\t\ttickFormatFunction: function tickFormatFunction(tick, index, ticks) {\r\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t} else {\r\n\t\t\t\treturn formattedTick;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tickMoments = me.ticks;\r\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labelMoment = value && value.isValid && value.isValid() ? value : me.getLabelMoment(datasetIndex, index);\r\n\r\n\t\t\tif (labelMoment) {\r\n\t\t\t\tvar offset = labelMoment.diff(me.firstTick, me.tickUnit, true);\r\n\r\n\t\t\t\tvar decimal = offset / me.scaleSizeInUnits;\r\n\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\tvar valueWidth = innerWidth / Math.max(me.ticks.length - 1, 1);\r\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\t\tvar valueHeight = innerHeight / Math.max(me.ticks.length - 1, 1);\r\n\t\t\t\t\tvar heightOffset = (innerHeight * decimal) + me.paddingTop;\r\n\r\n\t\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left + me.paddingLeft : me.top + me.paddingTop)) / innerDimension;\r\n\t\t\toffset *= me.scaleSizeInUnits;\r\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\r\n\t\t},\r\n\t\tparseTime: function(label) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (typeof me.options.time.parser === 'string') {\r\n\t\t\t\treturn moment(label, me.options.time.parser);\r\n\t\t\t}\r\n\t\t\tif (typeof me.options.time.parser === 'function') {\r\n\t\t\t\treturn me.options.time.parser(label);\r\n\t\t\t}\r\n\t\t\t// Date objects\r\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\treturn moment(label);\r\n\t\t\t}\r\n\t\t\t// Moment support\r\n\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\r\n\t\t\t\tconsole.warn(\"options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale\");\r\n\t\t\t\treturn me.options.time.format(label);\r\n\t\t\t}\r\n\t\t\t// Moment format parsing\r\n\t\t\treturn moment(label, me.options.time.format);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"time\", TimeScale, defaultConfig);\r\n\r\n};\r\n\n},{\"1\":1}]},{},[7])(7)\n});","/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n        // JavaScript to be fired on all pages\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': {\n      init: function() {\n        // JavaScript to be fired on the about us page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}