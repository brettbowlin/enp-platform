<?php

// autoload_real_52.php generated by xrstf/composer-php52

<<<<<<< HEAD
class ComposerAutoloaderInit86cf64cc2f7f0973061caa403c6110ef {
=======
class ComposerAutoloaderInit0b7cda09e2550505ff4b3bf5122773f8 {
>>>>>>> master
	private static $loader;

	public static function loadClassLoader($class) {
		if ('xrstf_Composer52_ClassLoader' === $class) {
			require dirname(__FILE__).'/ClassLoader52.php';
		}
	}

	/**
	 * @return xrstf_Composer52_ClassLoader
	 */
	public static function getLoader() {
		if (null !== self::$loader) {
			return self::$loader;
		}

<<<<<<< HEAD
		spl_autoload_register(array('ComposerAutoloaderInit86cf64cc2f7f0973061caa403c6110ef', 'loadClassLoader'), true /*, true */);
		self::$loader = $loader = new xrstf_Composer52_ClassLoader();
		spl_autoload_unregister(array('ComposerAutoloaderInit86cf64cc2f7f0973061caa403c6110ef', 'loadClassLoader'));
=======
		spl_autoload_register(array('ComposerAutoloaderInit0b7cda09e2550505ff4b3bf5122773f8', 'loadClassLoader'), true /*, true */);
		self::$loader = $loader = new xrstf_Composer52_ClassLoader();
		spl_autoload_unregister(array('ComposerAutoloaderInit0b7cda09e2550505ff4b3bf5122773f8', 'loadClassLoader'));
>>>>>>> master

		$vendorDir = dirname(dirname(__FILE__));
		$baseDir   = dirname($vendorDir);
		$dir       = dirname(__FILE__);

		$map = require $dir.'/autoload_namespaces.php';
		foreach ($map as $namespace => $path) {
			$loader->add($namespace, $path);
		}

		$classMap = require $dir.'/autoload_classmap.php';
		if ($classMap) {
			$loader->addClassMap($classMap);
		}

		$loader->register(true);

		return $loader;
	}
}
